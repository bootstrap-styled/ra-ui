{"version":3,"sources":["authProvider.js","reviews/reviewActions.js","reviews/reviewSaga.js","sagas.js","themeReducer.js","configuration/actions.js","themes.js","Login.js","AppBar.js","Layout.js","commands/NbItemsField.js","products/ProductReferenceField.js","reviews/StarRatingField.js","visitors/AvatarField.js","visitors/FullNameField.js","segments/data.js","visitors/SegmentsField.js","visitors/SegmentInput.js","visitors/SegmentsInput.js","visitors/CustomerLinkField.js","visitors/MobileGrid.js","visitors/index.js","visitors/CustomerReferenceField.js","commands/MobileGrid.js","commands/CommandList.js","commands/Basket.js","commands/CommandEdit.js","products/GridList.js","products/Poster.js","products/index.js","products/ThumbnailField.js","products/ProductRefField.js","categories/LinkToRelatedProducts.js","categories/index.js","reviews/ApproveButton.js","reviews/AcceptButton.js","reviews/RejectButton.js","reviews/ReviewEditActions.js","reviews/BulkApproveAction.js","reviews/BulkRejectAction.js","reviews/rowStyle.js","reviews/MobileGrid.js","reviews/index.js","Menu.js","dashboard/Welcome.js","dashboard/CardIcon.js","dashboard/MonthlyRevenue.js","dashboard/NbNewOrders.js","dashboard/PendingOrders.js","dashboard/PendingReviews.js","dashboard/NewCustomers.js","dataProvider/index.js","dashboard/Dashboard.js","dashboard/index.js","configuration/Configuration.js","segments/LinkToRelatedCustomers.js","segments/Segments.js","routes.js","i18n/en.js","fakeServer/index.js","App.js","index.js"],"names":["authProvider","type","params","AUTH_LOGIN","username","localStorage","setItem","Promise","resolve","AUTH_LOGOUT","removeItem","AUTH_ERROR","AUTH_CHECK","getItem","reject","REVIEW_APPROVE_FAILURE","reviewApprove","id","data","basePath","payload","Object","objectSpread","status","meta","resource","fetch","UPDATE","onSuccess","notification","body","level","redirectTo","onFailure","REVIEW_REJECT_FAILURE","reviewReject","reviewSaga","regenerator_default","a","wrap","_context3","prev","next","all","takeEvery","mark","_callee","_ref","error","_context","console","stop","_callee2","_ref2","_context2","_marked","sagas","themeReducer","previousState","arguments","length","undefined","darkTheme","palette","lightTheme","secondary","light","main","dark","contrastText","renderInput","_ref$meta","touched","inputProps","esm_extends","input","props","objectWithoutProperties","react_default","createElement","TextField_default","assign","helperText","fullWidth","Login","login","auth","_this","userLogin","location","state","nextPathname","_this$props","this","handleSubmit","isLoading","translate","Card_default","Avatar_default","Lock_default","onSubmit","Field","autoFocus","name","component","label","disabled","CardActions_default","Button_default","variant","color","CircularProgress_default","size","thickness","Notification","Component","EnhancedLogin","compose","reduxForm","form","validate","values","errors","password","connect","admin","loading","enhance","LoginWithTheme","styles","theme","createMuiTheme","CustomUserMenu","UserMenu","MenuItemLink","to","primaryText","leftIcon","Settings_default","CustomAppBar","AppBar","userMenu","CustomSidebar","Sidebar","Layout","appBar","sidebar","render","record","basket","NbItemsField","FunctionField","defaultProps","textAlign","ProductReferenceField","lib","source","reference","addLabel","style","opacity","width","height","StarRatingField","Array","rating","fill","map","_","i","Stars_default","key","AvatarField","src","concat","avatar","PureFullNameField","pure","_ref$record","display","flexWrap","alignItems","visitors_AvatarField","first_name","last_name","segments_data","TranslatedSegmentsField","className","groups","segment","Badge_default","segments","find","s","TranslatedSegmentInput","rest","choices","TranslatedSegmentsInput","addField","CustomerLinkField","Link","visitors_FullNameField","MobileGrid","ids","margin","CardHeader_default","title","CardContent_default","parseInt","nb_commands","ColoredNumberField","options","currency","visitors_SegmentsField","VisitorIcon","Icon","VisitorFilter","alwaysOn","defaultValue","visitors_SegmentInput","WrappedComponent","Colored","displayName","colored","NumberField","VisitorList","List","filters","visitors_VisitorFilter","sort","field","order","perPage","xsmall","visitors_MobileGrid","medium","visitors_CustomerLinkField","showTime","VisitorTitle","VisitorEdit","_ref3","visitors_VisitorTitle","validation","email","path","target","commands_NbItemsField","filter","products_ProductReferenceField","reviews_StarRatingField","padding","visitors_SegmentsInput","VisitorCreate","_ref4","CustomerReferenceField","ReferenceField","field_TextField","EditButton","visitors_CustomerReferenceField","DateField","BooleanField","CommandFilter","optionText","choice","StyledTabbedDatagrid","tabs","ordered","delivered","cancelled","handleChange","event","value","filterValues","setFilters","_this$props2","react","Tabs_default","centered","indicatorColor","onChange","Tab_default","Divider_default","commands_MobileGrid","defineProperty","React","CommandList","filterDefaultValues","CommandList_CommandFilter","Basket","fetchData","crudGetMany","item","product_id","products","Paper_default","Table_default","Thead_default","Tr_default","Th_default","Tbody_default","Td_default","price","toLocaleString","quantity","colSpan","total_ex_taxes","delivery_fees","tax_rate","total","productId","resources","r","reduce","crudGetManyAction","CommandTitle","smart_count","CommandEdit","EditController","controllerProps","Cards_Card_default","defaultTitle","commands_Basket","getColsForWidth","withWidth","GridList_default","cellHeight","cols","GridListTile_default","thumbnail","alt","GridListTileBar_default","subtitle","actionIcon","IconButton_default","linkToRecord","Create_default","Poster","image","ProductIcon","QuickFilter","Chip_default","ProductFilter","ProductList","products_ProductFilter","products_GridList","ProductCreate","required","allowEmpty","esm","ProductTitle","ProductEdit","products_ProductTitle","products_Poster","pagination","maxWidth","maxHeight","ThumbnailField","ProductRefField","react_router_dom_es","pathname","search","stringify","page","JSON","category_id","CategoryIcon","CategoryList","categories_LinkToRelatedProducts","CategoryTitle","CategoryEdit","products_ThumbnailField","products_ProductRefField","minimumFractionDigits","ApproveButton","handleApprove","handleReject","onClick","ThumbUp_default","ThumbDown_default","reviewApproveAction","reviewRejectAction","AcceptButton","paddingRight","ReviewEditActions","layout_CardActions","reviews_AcceptButton","RejectButton","BulkApproveAction","componentDidMount","startUndoable","selectedIds","crudUpdateMany","onExit","BulkRejectAction","rowStyle","index","defaultStyle","borderLeftColor","green","borderLeftWidth","borderLeftStyle","orange","red","cardStyle","flexDirection","comment","reviews_ApproveButton","ReviewIcon","ReviewFilter","Filter","SearchInput","SelectInput","ReferenceInput","AutocompleteInput","DateInput","ReviewsBulkActions","BulkActions","reviews_BulkApproveAction","reviews_BulkRejectAction","BulkDeleteAction","ReviewList","bulkActions","reviews_ReviewsBulkActions","reviews_ReviewFilter","Responsive","reviews_MobileGrid","Datagrid","ReviewEdit","Edit","actions","reviews_ReviewEditActions","SimpleForm","LongTextInput","items","icon","Label_default","AttachMoney_default","withRouter","locale","i18n","onMenuClick","logout","DashboardMenuItem","mediaUrl","Math","random","v4_esm","backgroundSize","backgroundRepeat","backgroundPosition","justifyContent","href","Home_default","Code_default","card","float","zIndex","borderRadius","CardIcon","bgColor","backgroundColor","flex","marginRight","marginTop","overflow","minHeight","dashboard_CardIcon","DollarIcon","ShoppingCartIcon","_ref$orders","orders","_ref$customers","customers","List_default","dense","ListItem_default","button","customer_id","ListItemText_default","primary","Date","date","nb_items","customer_name","ListItemSecondaryAction_default","titleLink","textDecoration","background","ListItemTextWrapper","styled","div","_templateObject","query","_ref$reviews","reviews","nb","CommentIcon","tag","fontSize","flexFlow","_ref$visitors","visitors","CustomerIcon","src_dataProvider","__webpack_require__","e","then","bind","provider","default","factory","Error","flexColumn","leftCol","rightCol","marginLeft","singleCol","marginBottom","Dashboard","_this2","aMonthAgo","setDate","getDate","dataProviderFactory","process","dataProvider","GET_LIST","date_gte","toISOString","response","stats","revenue","nbNewOrders","pendingOrders","push","setState","maximumFractionDigits","customerIds","GET_MANY","customer","pendingOrdersCustomers","nbPendingReviews","pendingReviews","slice","min","review","pendingReviewsCustomers","has_ordered","first_seen_gte","newCustomers","nbNewCustomers","_this$state","Title","dashboard_Welcome","dashboard_MonthlyRevenue","dashboard_NbNewOrders","dashboard_PendingOrders","small","dashboard_PendingReviews","dashboard_NewCustomers","changeLocale","changeTheme","lib_Button_default","border","segments_LinkToRelatedCustomers","routes","exact","Configuration","Segments","en","englishMessages","pos","configuration","language","dashboard","monthly_revenue","new_orders","pending_reviews","new_customers","pending_orders","welcome","aor_button","demo_button","fields","commands","last_seen_gte","total_spent","identity","address","delete","delivery","sum","unit_price","date_lte","total_gte","returned","height_gte","height_lte","stock_lte","stock","width_gte","width_lte","details","description","categories","command_id","action","accept","approved_success","approved_error","rejected_success","rejected_error","compulsive","collector","ordered_once","regular","returns","reviewer","fakeServer","i18nProvider","messages","App","fakeServerFactory","restoreFetch","Admin","customReducers","customSagas","customRoutes","loginPage","appLayout","menu","Menu","Resource","list","edit","create","CommandIcon","ReactDOM","BootstrapProvider_default","injectGlobal","reset","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a269767f.chunk.js","sourcesContent":["import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_CHECK, AUTH_ERROR } from 'react-admin';\n\nexport default (type, params) => {\n    if (type === AUTH_LOGIN) {\n        const { username } = params;\n        localStorage.setItem('username', username);\n        // accept all username/password combinations\n        return Promise.resolve();\n    }\n    if (type === AUTH_LOGOUT) {\n        localStorage.removeItem('username');\n        return Promise.resolve();\n    }\n    if (type === AUTH_ERROR) {\n        return Promise.resolve();\n    }\n    if (type === AUTH_CHECK) {\n        return localStorage.getItem('username')\n            ? Promise.resolve()\n            : Promise.reject();\n    }\n    return Promise.reject('Unkown method');\n};\n","import { UPDATE } from 'react-admin';\n\nexport const REVIEW_APPROVE = 'REVIEW_APPROVE';\nexport const REVIEW_APPROVE_LOADING = 'REVIEW_APPROVE_LOADING';\nexport const REVIEW_APPROVE_FAILURE = 'REVIEW_APPROVE_FAILURE';\nexport const REVIEW_APPROVE_SUCCESS = 'REVIEW_APPROVE_SUCCESS';\n\nexport const reviewApprove = (id, data, basePath) => ({\n    type: REVIEW_APPROVE,\n    payload: { id, data: { ...data, status: 'accepted' }, basePath },\n    meta: {\n        resource: 'reviews',\n        fetch: UPDATE,\n        onSuccess: {\n            notification: {\n                body: 'resources.reviews.notification.approved_success',\n                level: 'info',\n            },\n            redirectTo: '/reviews',\n            basePath,\n        },\n        onFailure: {\n            notification: {\n                body: 'resources.reviews.notification.approved_error',\n                level: 'warning',\n            },\n        },\n    },\n});\n\nexport const REVIEW_REJECT = 'REVIEW_REJECT';\nexport const REVIEW_REJECT_LOADING = 'REVIEW_REJECT_LOADING';\nexport const REVIEW_REJECT_FAILURE = 'REVIEW_REJECT_FAILURE';\nexport const REVIEW_REJECT_SUCCESS = 'REVIEW_REJECT_SUCCESS';\n\nexport const reviewReject = (id, data, basePath) => ({\n    type: REVIEW_REJECT,\n    payload: { id, data: { ...data, status: 'rejected' }, basePath },\n    meta: {\n        resource: 'reviews',\n        fetch: UPDATE,\n        onSuccess: {\n            notification: {\n                body: 'resources.reviews.notification.rejected_success',\n                level: 'info',\n            },\n            redirectTo: '/reviews',\n            basePath,\n        },\n        onFailure: {\n            notification: {\n                body: 'resources.reviews.notification.rejected_error',\n                level: 'warning',\n            },\n        },\n    },\n});\n","import { all, takeEvery } from 'redux-saga/effects';\nimport { REVIEW_APPROVE_FAILURE, REVIEW_REJECT_FAILURE } from './reviewActions';\n\nexport default function* reviewSaga() {\n    yield all([\n        takeEvery(REVIEW_APPROVE_FAILURE, function*({ error }) {\n            console.error(error);\n            yield all([]);\n        }),\n        takeEvery(REVIEW_REJECT_FAILURE, function*({ error }) {\n            console.error(error);\n            yield all([]);\n        }),\n    ]);\n}\n","import reviewSaga from './reviews/reviewSaga';\n\nexport default [reviewSaga];\n","import { CHANGE_THEME } from './configuration/actions';\n\nexport default (previousState = 'light', { type, payload }) => {\n    if (type === CHANGE_THEME) {\n        return payload;\n    }\n    return previousState;\n};\n","export const CHANGE_THEME = 'CHANGE_THEME';\n\nexport const changeTheme = theme => ({\n    type: CHANGE_THEME,\n    payload: theme,\n});\n","export const darkTheme = {\n    palette: {\n        type: 'dark', // Switching the dark mode on is a single property value change.\n    },\n};\n\nexport const lightTheme = {\n    palette: {\n        secondary: {\n            light: '#5f5fc4',\n            main: '#283593',\n            dark: '#001064',\n            contrastText: '#fff',\n        },\n    },\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { propTypes, reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport {\n    MuiThemeProvider,\n    createMuiTheme,\n} from '@material-ui/core/styles';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport { Notification, translate, userLogin } from 'react-admin';\n\nimport { lightTheme } from './themes';\n\n// const styles = theme => ({\n//     main: {\n//         display: 'flex',\n//         flexDirection: 'column',\n//         minHeight: '100vh',\n//         alignItems: 'center',\n//         justifyContent: 'flex-start',\n//         background: 'url(https://source.unsplash.com/random/1600x900)',\n//         backgroundRepeat: 'no-repeat',\n//         backgroundSize: 'cover',\n//     },\n//     card: {\n//         minWidth: 300,\n//         marginTop: '6em',\n//     },\n//     avatar: {\n//         margin: '1em',\n//         display: 'flex',\n//         justifyContent: 'center',\n//     },\n//     icon: {\n//         backgroundColor: theme.palette.secondary.main,\n//     },\n//     hint: {\n//         marginTop: '1em',\n//         display: 'flex',\n//         justifyContent: 'center',\n//         color: theme.palette.grey[500],\n//     },\n//     form: {\n//         padding: '0 1em 1em 1em',\n//     },\n//     input: {\n//         marginTop: '1em',\n//     },\n//     actions: {\n//         padding: '0 1em 1em 1em',\n//     },\n// });\n\n// see http://redux-form.com/6.4.3/examples/material-ui/\nconst renderInput = ({\n    meta: { touched, error } = {},\n    input: { ...inputProps },\n    ...props\n}) => (\n    <TextField\n        error={!!(touched && error)}\n        helperText={touched && error}\n        {...inputProps}\n        {...props}\n        fullWidth\n    />\n);\n\nclass Login extends Component {\n    login = auth =>\n        this.props.userLogin(\n            auth,\n            this.props.location.state\n                ? this.props.location.state.nextPathname\n                : '/'\n        );\n\n    render() {\n        const { handleSubmit, isLoading, translate } = this.props;\n        return (\n            <div>\n                <Card>\n                    <div>\n                        <Avatar>\n                            <LockIcon />\n                        </Avatar>\n                    </div>\n                    <form onSubmit={handleSubmit(this.login)}>\n                        <div>Hint: demo / demo</div>\n                        <div>\n                            <div>\n                                <Field\n                                    autoFocus\n                                    name=\"username\"\n                                    component={renderInput}\n                                    label={translate('ra.auth.username')}\n                                    disabled={isLoading}\n                                />\n                            </div>\n                            <div>\n                                <Field\n                                    name=\"password\"\n                                    component={renderInput}\n                                    label={translate('ra.auth.password')}\n                                    type=\"password\"\n                                    disabled={isLoading}\n                                />\n                            </div>\n                        </div>\n                        <CardActions>\n                            <Button\n                                variant=\"raised\"\n                                type=\"submit\"\n                                color=\"primary\"\n                                disabled={isLoading}\n                                fullWidth\n                            >\n                                {isLoading && (\n                                    <CircularProgress size={25} thickness={2} />\n                                )}\n                                {translate('ra.auth.sign_in')}\n                            </Button>\n                        </CardActions>\n                    </form>\n                </Card>\n                <Notification />\n            </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    ...propTypes,\n    authProvider: PropTypes.func,\n    previousRoute: PropTypes.string,\n    translate: PropTypes.func.isRequired,\n    userLogin: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({ isLoading: state.admin.loading > 0 });\n\nconst enhance = compose(\n    translate,\n    reduxForm({\n        form: 'signIn',\n        validate: (values, props) => {\n            const errors = {};\n            const { translate } = props;\n            if (!values.username) {\n                errors.username = translate('ra.validation.required');\n            }\n            if (!values.password) {\n                errors.password = translate('ra.validation.required');\n            }\n            return errors;\n        },\n    }),\n    connect(\n        mapStateToProps,\n        { userLogin }\n    ),\n);\n\nconst EnhancedLogin = enhance(Login);\n\n// We need to put the MuiThemeProvider decoration in another component\n// Because otherwise the withStyles() HOC used in EnhancedLogin won't get\n// the right theme\nconst LoginWithTheme = props => (\n    <MuiThemeProvider theme={createMuiTheme(lightTheme)}>\n        <EnhancedLogin {...props} />\n    </MuiThemeProvider>\n);\n\nexport default LoginWithTheme;\n","import React from 'react';\nimport { AppBar, UserMenu, MenuItemLink, translate } from 'react-admin';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nconst CustomUserMenu = translate(({ translate, ...props }) => (\n    <UserMenu {...props}>\n        <MenuItemLink\n            to=\"/configuration\"\n            primaryText={translate('pos.configuration')}\n            leftIcon={<SettingsIcon />}\n        />\n    </UserMenu>\n));\n\nconst CustomAppBar = props => (\n    <AppBar {...props} userMenu={<CustomUserMenu />} />\n);\n\nexport default CustomAppBar;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Layout, Sidebar } from 'react-admin';\nimport AppBar from './AppBar';\nimport { darkTheme, lightTheme } from './themes';\n\nconst CustomSidebar = props => <Sidebar size={200} {...props} />;\nconst CustomLayout = props => (\n    <Layout appBar={AppBar} sidebar={CustomSidebar} {...props} />\n);\n\nexport default connect(\n    state => ({\n        theme: state.theme === 'dark' ? darkTheme : lightTheme,\n    }),\n    {}\n)(CustomLayout);\n","import React from 'react';\nimport { FunctionField } from 'react-admin';\n\nconst render = record => record.basket.length;\n\nconst NbItemsField = props => <FunctionField {...props} render={render} />;\n\nNbItemsField.defaultProps = {\n    label: 'Nb Items',\n    textAlign: 'right',\n};\n\nexport default NbItemsField;\n","import React from 'react';\nimport { ReferenceField, TextField } from '@bootstrap-styled/ra-ui';\n\nconst ProductReferenceField = props => (\n    <ReferenceField\n        label=\"Product\"\n        source=\"product_id\"\n        reference=\"products\"\n        {...props}\n    >\n        <TextField source=\"reference\" />\n    </ReferenceField>\n);\nProductReferenceField.defaultProps = {\n    source: 'product_id',\n    addLabel: true,\n};\n\nexport default ProductReferenceField;\n","import React from 'react';\nimport Icon from '@material-ui/icons/Stars';\n\nconst style = { opacity: 0.87, width: 20, height: 20 };\n\nconst StarRatingField = ({ record }) => (\n    <span>\n        {Array(record.rating)\n            .fill(true)\n            .map((_, i) => <Icon key={i} style={style} />)}\n    </span>\n);\n\nStarRatingField.defaultProps = {\n    label: 'resources.reviews.fields.rating',\n    source: 'rating',\n    addLabel: true,\n};\n\nexport default StarRatingField;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst AvatarField = ({ record, size }) => (\n    <Avatar\n        src={`${record.avatar}?size=${size}x${size}`}\n        size={size}\n        style={{ width: size, height: size }}\n    />\n);\n\nAvatarField.defaultProps = {\n    size: 25,\n};\n\nexport default AvatarField;\n","import React from 'react';\nimport AvatarField from './AvatarField';\nimport pure from 'recompose/pure';\n\nconst FullNameField = ({ record = {}, size }) => (\n    <div style={{ display: 'flex', flexWrap: 'nowrap', alignItems: 'center' }}>\n        <AvatarField record={record} size={size} />\n        &nbsp;{record.first_name} {record.last_name}\n    </div>\n);\n\nconst PureFullNameField = pure(FullNameField);\n\nPureFullNameField.defaultProps = {\n    source: 'last_name',\n    label: 'resources.customers.fields.name',\n};\n\nexport default PureFullNameField;\n","export default [\n    { id: 'compulsive', name: 'resources.segments.data.compulsive' },\n    { id: 'collector', name: 'resources.segments.data.collector' },\n    { id: 'ordered_once', name: 'resources.segments.data.ordered_once' },\n    { id: 'regular', name: 'resources.segments.data.regular' },\n    { id: 'returns', name: 'resources.segments.data.returns' },\n    { id: 'reviewer', name: 'resources.segments.data.reviewer' },\n];\n","import React from 'react';\nimport Badge from '@bootstrap-styled/v4/lib/Badge';\nimport { translate } from 'react-admin';\nimport segments from '../segments/data';\n\n// const styles = {\n//     main: { display: 'flex', flexWrap: 'wrap' },\n//     chip: { margin: 4 },\n// };\n\nconst SegmentsField = ({ record, translate }) => (\n    <span className=\"d-flex flex-wrap\">\n        {record.groups &&\n            record.groups.map(segment => (\n                <Badge\n                    key={segment}\n                    className=\"m-1 p-1\"\n                >\n                  {translate(segments.find(s => s.id === segment).name)}\n                </Badge>\n            ))}\n    </span>\n);\n\nconst TranslatedSegmentsField = translate(SegmentsField);\n\nTranslatedSegmentsField.defaultProps = {\n    addLabel: true,\n    source: 'groups',\n};\n\nexport default TranslatedSegmentsField;\n","import React from 'react';\nimport { translate } from 'react-admin';\nimport { SelectInput } from '@bootstrap-styled/ra-ui';\nimport compose from 'recompose/compose';\n\nimport segments from '../segments/data';\n\n// const styles = {\n//     input: { width: 150 },\n// };\n\nconst SegmentInput = ({ translate, ...rest }) => (\n    <SelectInput\n        {...rest}\n        choices={segments.map(segment => ({\n            id: segment.id,\n            name: translate(segment.name),\n        }))}\n    />\n);\n\nconst TranslatedSegmentInput = compose(\n    translate,\n)(SegmentInput);\n\nTranslatedSegmentInput.defaultProps = {\n    source: 'groups',\n};\n\nexport default TranslatedSegmentInput;\n","import React from 'react';\nimport { translate } from 'react-admin';\nimport { SelectArrayInput } from '@bootstrap-styled/ra-ui';\n\nimport segments from '../segments/data';\n\nconst SegmentsInput = ({ translate, addField, ...rest }) => (\n    <SelectArrayInput\n        {...rest}\n        choices={segments.map(segment => ({\n            id: segment.id,\n            name: translate(segment.name),\n        }))}\n    />\n);\n\nconst TranslatedSegmentsInput = translate(SegmentsInput);\n\nTranslatedSegmentsInput.defaultProps = {\n    addField: true,\n    source: 'groups',\n};\n\nexport default TranslatedSegmentsInput;\n","import React from 'react';\nimport { Link } from 'react-admin';\n\nimport FullNameField from './FullNameField';\n\nconst CustomerLinkField = props => (\n    <Link to={`/customers/${props.record.id}`}>\n        <FullNameField {...props} />\n    </Link>\n);\n\nCustomerLinkField.defaultProps = {\n    source: 'customer_id',\n    addLabel: true,\n};\n\nexport default CustomerLinkField;\n","// in src/comments.js\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { translate } from 'react-admin';\nimport { DateField, EditButton, NumberField } from '@bootstrap-styled/ra-ui';\n\nimport AvatarField from './AvatarField';\nimport { ColoredNumberField } from './index';\nimport SegmentsField from './SegmentsField';\n\n// const listStyles = theme => ({\n//     card: {\n//         height: '100%',\n//         display: 'flex',\n//         flexDirection: 'column',\n//         margin: '0.5rem 0',\n//     },\n//     cardTitleContent: {\n//         display: 'flex',\n//         flexDirection: 'rows',\n//         alignItems: 'center',\n//         justifyContent: 'space-between',\n//     },\n//     cardContent: {\n//         ...theme.typography.body1,\n//         display: 'flex',\n//         flexDirection: 'column',\n//     },\n// });\n\nconst MobileGrid =\n    translate(({ ids, data, basePath, translate }) => (\n        <div style={{ margin: '1em' }}>\n            {ids.map(id => (\n                <Card key={id}>\n                    <CardHeader\n                        title={\n                            <div>\n                                <h2>{`${data[id].first_name} ${\n                                    data[id].last_name\n                                }`}</h2>\n                                <EditButton\n                                    resource=\"visitors\"\n                                    basePath={basePath}\n                                    record={data[id]}\n                                />\n                            </div>\n                        }\n                        avatar={<AvatarField record={data[id]} size=\"45\" />}\n                    />\n                    <CardContent>\n                        <div>\n                            {translate(\n                                'resources.customers.fields.last_seen_gte'\n                            )}&nbsp;\n                            <DateField\n                                record={data[id]}\n                                source=\"last_seen\"\n                                type=\"date\"\n                            />\n                        </div>\n                        <div>\n                            {translate(\n                                'resources.commands.name',\n                                parseInt(data[id].nb_commands, 10) || 1\n                            )}&nbsp;:&nbsp;<NumberField\n                                record={data[id]}\n                                source=\"nb_commands\"\n                                label=\"resources.customers.fields.commands\"\n                            />\n                        </div>\n                        <div>\n                            {translate(\n                                'resources.customers.fields.total_spent'\n                            )}&nbsp; :{' '}\n                            <ColoredNumberField\n                                record={data[id]}\n                                source=\"total_spent\"\n                                options={{ style: 'currency', currency: 'USD' }}\n                            />\n                        </div>\n                    </CardContent>\n                    {data[id].groups &&\n                        data[id].groups.length > 0 && (\n                            <CardContent>\n                                <SegmentsField record={data[id]} />\n                            </CardContent>\n                        )}\n                </Card>\n            ))}\n        </div>\n    )\n);\n\nMobileGrid.defaultProps = {\n    data: {},\n    ids: [],\n};\n\nexport default MobileGrid;\n","import React from 'react';\nimport {\n    BooleanField,\n    Create,\n    Datagrid,\n    DateField,\n    DateInput,\n    Edit,\n    EditButton,\n    Filter,\n    FormTab,\n    LongTextInput,\n    NullableBooleanInput,\n    NumberField,\n    ReferenceManyField,\n    Responsive,\n    SearchInput,\n    TabbedForm,\n    TextField,\n    TextInput,\n} from '@bootstrap-styled/ra-ui';\n\nimport { List } from 'react-admin';\nimport Icon from '@material-ui/icons/Person';\n\nimport NbItemsField from '../commands/NbItemsField';\nimport ProductReferenceField from '../products/ProductReferenceField';\nimport StarRatingField from '../reviews/StarRatingField';\nimport FullNameField from './FullNameField';\nimport SegmentsField from './SegmentsField';\nimport SegmentInput from './SegmentInput';\nimport SegmentsInput from './SegmentsInput';\nimport CustomerLinkField from './CustomerLinkField';\nimport MobileGrid from './MobileGrid';\n\nexport const VisitorIcon = Icon;\n\nconst VisitorFilter = props => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <DateInput source=\"last_seen_gte\" />\n        <NullableBooleanInput source=\"has_ordered\" />\n        <NullableBooleanInput source=\"has_newsletter\" defaultValue />\n        <SegmentInput />\n    </Filter>\n);\n\nconst colored = WrappedComponent => {\n    const Colored = props =>\n        props.record[props.source] > 500 ? (\n            <span style={{ color: 'red' }}>\n                <WrappedComponent {...props} />\n            </span>\n        ) : (\n            <WrappedComponent {...props} />\n        );\n\n    Colored.displayName = `Colored(${WrappedComponent.displayName})`;\n\n    return Colored;\n};\n\nexport const ColoredNumberField = colored(NumberField);\nColoredNumberField.defaultProps = NumberField.defaultProps;\n\n// const listStyles = {\n//     nb_commands: { color: 'purple' },\n// };\n\nexport const VisitorList = (({ ...props }) => (\n    <List\n        {...props}\n        filters={<VisitorFilter />}\n        sort={{ field: 'last_seen', order: 'DESC' }}\n        perPage={25}\n    >\n        <Responsive\n            xsmall={<MobileGrid />}\n            medium={\n                <Datagrid>\n                    <CustomerLinkField />\n                    <DateField source=\"last_seen\" type=\"date\" />\n                    <NumberField\n                        source=\"nb_commands\"\n                        label=\"resources.customers.fields.commands\"\n                    />\n                    <ColoredNumberField\n                        source=\"total_spent\"\n                        options={{ style: 'currency', currency: 'USD' }}\n                    />\n                    <DateField source=\"latest_purchase\" showTime />\n                    <BooleanField source=\"has_newsletter\" label=\"News.\" />\n                    <SegmentsField />\n                    <EditButton />\n                </Datagrid>\n            }\n        />\n    </List>\n));\n\nconst VisitorTitle = ({ record }) =>\n    record ? <FullNameField record={record} size={32} /> : null;\n\n// const editStyles = {\n//     first_name: { display: 'inline-block' },\n//     last_name: { display: 'inline-block', marginLeft: 32 },\n//     email: { width: 544 },\n//     address: { maxWidth: 544 },\n//     zipcode: { display: 'inline-block' },\n//     city: { display: 'inline-block', marginLeft: 32 },\n//     comment: {\n//         maxWidth: '20em',\n//         overflow: 'hidden',\n//         textOverflow: 'ellipsis',\n//         whiteSpace: 'nowrap',\n//     },\n// };\n\nexport const VisitorEdit = (({ ...props }) => (\n    <Edit title={<VisitorTitle />} {...props}>\n        <TabbedForm>\n            <FormTab label=\"resources.customers.tabs.identity\">\n                <TextInput\n                    source=\"first_name\"\n                    className=\"d-inline-block\"\n                />\n                <TextInput\n                    source=\"last_name\"\n                    className=\"d-inline-block\"\n                />\n                <TextInput\n                    type=\"email\"\n                    source=\"email\"\n                    validation={{ email: true }}\n                />\n                <DateInput source=\"birthday\" />\n            </FormTab>\n            <FormTab label=\"resources.customers.tabs.address\" path=\"address\">\n                <LongTextInput\n                    source=\"address\"\n                />\n                <TextInput source=\"zipcode\" className=\"d-inline-block\" />\n                <TextInput source=\"city\" className=\"d-inline-block\" />\n            </FormTab>\n            <FormTab label=\"resources.customers.tabs.orders\" path=\"orders\">\n                <ReferenceManyField\n                    addLabel={false}\n                    sort={{ field: 'date', order: 'DESC' }}\n                    reference=\"commands\"\n                    target=\"customer_id\"\n                >\n                    <Datagrid>\n                        <DateField source=\"date\" />\n                        <TextField source=\"reference\" />\n                        <NbItemsField />\n                        <NumberField\n                            source=\"total\"\n                            options={{ style: 'currency', currency: 'USD' }}\n                        />\n                        <TextField source=\"status\" />\n                        <EditButton />\n                    </Datagrid>\n                </ReferenceManyField>\n            </FormTab>\n            <FormTab label=\"resources.customers.tabs.reviews\" path=\"reviews\">\n                <ReferenceManyField\n                    addLabel={false}\n                    sort={{ field: 'date', order: 'DESC' }}\n                    reference=\"reviews\"\n                    target=\"customer_id\"\n                >\n                    <Datagrid filter={{ status: 'approved' }}>\n                        <DateField source=\"date\" />\n                        <ProductReferenceField />\n                        <StarRatingField />\n                        <TextField\n                            source=\"comment\"\n                        />\n                        <EditButton style={{ padding: 0 }} />\n                    </Datagrid>\n                </ReferenceManyField>\n            </FormTab>\n            <FormTab label=\"resources.customers.tabs.stats\" path=\"stats\">\n                <SegmentsInput />\n                <NullableBooleanInput source=\"has_newsletter\" />\n                <DateField\n                    source=\"first_seen\"\n                    style={{ width: 128, display: 'inline-block' }}\n                />\n                <DateField\n                    source=\"latest_purchase\"\n                    style={{ width: 128, display: 'inline-block' }}\n                />\n                <DateField\n                    source=\"last_seen\"\n                    style={{ width: 128, display: 'inline-block' }}\n                />\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n));\n\nexport const VisitorCreate = (({ ...props }) => (\n    <Create {...props}>\n        <TabbedForm>\n            <FormTab label=\"resources.customers.tabs.identity\">\n                <TextInput\n                    autoFocus\n                    source=\"first_name\"\n                    className=\"d-inline-block\"\n                />\n                <TextInput\n                    source=\"last_name\"\n                    className=\"d-inline-block\"\n                />\n                <TextInput\n                    type=\"email\"\n                    source=\"email\"\n                    validation={{ email: true }}\n                    fullWidth={true}\n                />\n                <DateInput source=\"birthday\" />\n            </FormTab>\n            <FormTab label=\"resources.customers.tabs.address\" path=\"address\">\n                <LongTextInput\n                    source=\"address\"\n                />\n                <TextInput source=\"zipcode\" className=\"d-inline-block\" />\n                <TextInput source=\"city\" className=\"d-inline-block\" />\n            </FormTab>\n        </TabbedForm>\n    </Create>\n));\n","import React from 'react';\nimport { ReferenceField } from 'react-admin';\n\nimport FullNameField from './FullNameField';\n\nconst CustomerReferenceField = props => (\n    <ReferenceField source=\"customer_id\" reference=\"customers\" {...props}>\n        <FullNameField />\n    </ReferenceField>\n);\nCustomerReferenceField.defaultProps = {\n    source: 'customer_id',\n    addLabel: true,\n};\n\nexport default CustomerReferenceField;\n","// in src/comments.js\nimport React from 'react';\nimport {\n    DateField,\n    EditButton,\n    translate,\n    NumberField,\n    TextField,\n    BooleanField,\n} from 'react-admin';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\n\n// const listStyles = theme => ({\n//     card: {\n//         height: '100%',\n//         display: 'flex',\n//         flexDirection: 'column',\n//         margin: '0.5rem 0',\n//     },\n//     cardTitleContent: {\n//         display: 'flex',\n//         flexDirection: 'rows',\n//         alignItems: 'center',\n//         justifyContent: 'space-between',\n//     },\n//     cardContent: theme.typography.body1,\n//     cardContentRow: {\n//         display: 'flex',\n//         flexDirection: 'rows',\n//         alignItems: 'center',\n//         margin: '0.5rem 0',\n//     },\n// });\n\nconst MobileGrid = translate(({ ids, data, basePath, translate }) => (\n      <div style={{ margin: '1em' }}>\n          {ids.map(id => (\n              <Card key={id}>\n                  <CardHeader\n                      title={\n                          <div>\n                              <span>\n                                  {translate('resources.commands.name', 1)}:&nbsp;\n                                  <TextField\n                                      record={data[id]}\n                                      source=\"reference\"\n                                  />\n                              </span>\n                              <EditButton\n                                  resource=\"commands\"\n                                  basePath={basePath}\n                                  record={data[id]}\n                              />\n                          </div>\n                      }\n                  />\n                  <CardContent>\n                      <span>\n                          {translate('resources.customers.name', 1)}:&nbsp;\n                          <CustomerReferenceField\n                              record={data[id]}\n                              basePath={basePath}\n                          />\n                      </span>\n                      <span>\n                          {translate('resources.reviews.fields.date')}:&nbsp;\n                          <DateField\n                              record={data[id]}\n                              source=\"date\"\n                              showTime\n                          />\n                      </span>\n                      <span>\n                          {translate(\n                              'resources.commands.fields.basket.total'\n                          )}:&nbsp;\n                          <NumberField\n                              record={data[id]}\n                              source=\"total\"\n                              options={{ style: 'currency', currency: 'USD' }}\n                          />\n                      </span>\n                      <span>\n                          {translate('resources.commands.fields.status')}:&nbsp;\n                          <TextField source=\"status\" record={data[id]} />\n                      </span>\n                      <span>\n                          {translate('resources.commands.fields.returned')}:&nbsp;\n                          <BooleanField record={data[id]} source=\"returned\" />\n                      </span>\n                  </CardContent>\n              </Card>\n          ))}\n      </div>\n  )\n);\n\nMobileGrid.defaultProps = {\n    data: {},\n    ids: [],\n};\n\nexport default MobileGrid;\n","import React, { Fragment } from 'react';\nimport {\n    AutocompleteInput,\n    BooleanField,\n    Datagrid,\n    DateField,\n    DateInput,\n    EditButton,\n    Filter,\n    NullableBooleanInput,\n    NumberField,\n    ReferenceInput,\n    Responsive,\n    SearchInput,\n    TextField,\n    TextInput,\n} from '@bootstrap-styled/ra-ui';\n\nimport { List } from 'react-admin';\n\nimport Icon from '@material-ui/icons/AttachMoney';\nimport Divider from '@material-ui/core/Divider';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport NbItemsField from './NbItemsField';\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport MobileGrid from './MobileGrid';\n\nexport const CommandIcon = Icon;\n\nconst CommandFilter = ({ ...props }) => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <ReferenceInput source=\"customer_id\" reference=\"customers\">\n            <AutocompleteInput\n                optionText={choice =>\n                    `${choice.first_name} ${choice.last_name}`\n                }\n            />\n        </ReferenceInput>\n        <DateInput source=\"date_gte\" />\n        <DateInput source=\"date_lte\" />\n        <TextInput source=\"total_gte\" />\n        <NullableBooleanInput source=\"returned\" />\n    </Filter>\n);\n\n// const datagridStyles = {\n//     total: { fontWeight: 'bold' },\n// };\n\nclass TabbedDatagrid extends React.Component {\n    tabs = [\n        { id: 'ordered', name: 'ordered' },\n        { id: 'delivered', name: 'delivered' },\n        { id: 'cancelled', name: 'cancelled' },\n    ];\n\n    state = { ordered: [], delivered: [], cancelled: [] };\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.ids !== state[props.filterValues.status]) {\n            return { ...state, [props.filterValues.status]: props.ids };\n        }\n        return null;\n    }\n\n    handleChange = (event, value) => {\n        const { filterValues, setFilters } = this.props;\n        setFilters({ ...filterValues, status: value });\n    };\n\n    render() {\n        const { filterValues, ...props } = this.props;\n        return (\n            <Fragment>\n                <Tabs\n                    fullWidth\n                    centered\n                    value={filterValues.status}\n                    indicatorColor=\"primary\"\n                    onChange={this.handleChange}\n                >\n                    {this.tabs.map(choice => (\n                        <Tab\n                            key={choice.id}\n                            label={choice.name}\n                            value={choice.id}\n                        />\n                    ))}\n                </Tabs>\n                <Divider />\n                <Responsive\n                    xsmall={\n                        <MobileGrid\n                            {...props}\n                            ids={this.state[filterValues.status]}\n                        />\n                    }\n                    medium={\n                        <div>\n                            {filterValues.status === 'ordered' && (\n                                <Datagrid\n                                    {...props}\n                                    ids={this.state['ordered']}\n                                >\n                                    <DateField source=\"date\" showTime />\n                                    <TextField source=\"reference\" />\n                                    <CustomerReferenceField />\n                                    <NbItemsField />\n                                    <NumberField\n                                        source=\"total\"\n                                        options={{\n                                            style: 'currency',\n                                            currency: 'USD',\n                                        }}\n                                    />\n                                    <EditButton />\n                                </Datagrid>\n                            )}\n                            {filterValues.status === 'delivered' && (\n                                <Datagrid\n                                    {...props}\n                                    ids={this.state['delivered']}\n                                >\n                                    <DateField source=\"date\" showTime />\n                                    <TextField source=\"reference\" />\n                                    <CustomerReferenceField />\n                                    <NbItemsField />\n                                    <NumberField\n                                        source=\"total\"\n                                        options={{\n                                            style: 'currency',\n                                            currency: 'USD',\n                                        }}\n                                    />\n                                    <BooleanField source=\"returned\" />\n                                    <EditButton />\n                                </Datagrid>\n                            )}\n                            {filterValues.status === 'cancelled' && (\n                                <Datagrid\n                                    {...props}\n                                    ids={this.state['cancelled']}\n                                >\n                                    <DateField source=\"date\" showTime />\n                                    <TextField source=\"reference\" />\n                                    <CustomerReferenceField />\n                                    <NbItemsField />\n                                    <NumberField\n                                        source=\"total\"\n                                        options={{\n                                            style: 'currency',\n                                            currency: 'USD',\n                                        }}\n                                    />\n                                    <BooleanField source=\"returned\" />\n                                    <EditButton />\n                                </Datagrid>\n                            )}\n                        </div>\n                    }\n                />\n            </Fragment>\n        );\n    }\n}\n\nconst StyledTabbedDatagrid = TabbedDatagrid;\n\nconst CommandList = ({ ...props }) => (\n    <List\n        {...props}\n        filterDefaultValues={{ status: 'ordered' }}\n        sort={{ field: 'date', order: 'DESC' }}\n        perPage={25}\n        filters={<CommandFilter />}\n    >\n        <StyledTabbedDatagrid />\n    </List>\n);\n\nexport default CommandList;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Table from '@bootstrap-styled/v4/lib/Table';\nimport Tbody from '@bootstrap-styled/v4/lib/Table/Tbody';\nimport Td from '@bootstrap-styled/v4/lib/Table/Td';\nimport Th from '@bootstrap-styled/v4/lib/Table/Th';\nimport Thead from '@bootstrap-styled/v4/lib/Table/Thead';\nimport Tr from '@bootstrap-styled/v4/lib/Table/Tr';\n\nimport Paper from '@material-ui/core/Paper';\nimport { Link, translate, crudGetMany as crudGetManyAction } from 'react-admin';\nimport compose from 'recompose/compose';\n\n// const styles = {\n//     container: { width: '35em' },\n//     rightAlignedCell: { textAlign: 'right' },\n//     boldCell: { fontWeight: 'bold' },\n// };\n\nclass Basket extends Component {\n    componentDidMount() {\n        this.fetchData();\n    }\n    fetchData() {\n        const {\n            record: { basket },\n            crudGetMany,\n        } = this.props;\n        crudGetMany('products', basket.map(item => item.product_id));\n    }\n    render() {\n        const { record, products, translate } = this.props;\n        const { basket } = record;\n        return (\n            <Paper>\n                <Table>\n                    <Thead>\n                        <Tr>\n                            <Th>\n                                {translate(\n                                    'resources.commands.fields.basket.reference'\n                                )}\n                            </Th>\n                            <Th>\n                                {translate(\n                                    'resources.commands.fields.basket.unit_price'\n                                )}\n                            </Th>\n                            <Th>\n                                {translate(\n                                    'resources.commands.fields.basket.quantity'\n                                )}\n                            </Th>\n                            <Th>\n                                {translate(\n                                    'resources.commands.fields.basket.total'\n                                )}\n                            </Th>\n                        </Tr>\n                    </Thead>\n                    <Tbody>\n                        {basket.map(\n                            item =>\n                                products[item.product_id] && (\n                                    <Tr key={item.product_id}>\n                                        <Td>\n                                            <Link\n                                                to={`/products/${\n                                                    item.product_id\n                                                }`}\n                                            >\n                                                {\n                                                    products[item.product_id]\n                                                        .reference\n                                                }\n                                            </Link>\n                                        </Td>\n                                        <Td>\n                                            {products[\n                                                item.product_id\n                                            ].price.toLocaleString(undefined, {\n                                                style: 'currency',\n                                                currency: 'USD',\n                                            })}\n                                        </Td>\n                                        <Td>\n                                            {item.quantity}\n                                        </Td>\n                                        <Td>\n                                            {(\n                                                products[item.product_id]\n                                                    .price * item.quantity\n                                            ).toLocaleString(undefined, {\n                                                style: 'currency',\n                                                currency: 'USD',\n                                            })}\n                                        </Td>\n                                    </Tr>\n                                )\n                        )}\n                        <Tr>\n                            <Td colSpan={2} />\n                            <Td>\n                                {translate(\n                                    'resources.commands.fields.basket.sum'\n                                )}\n                            </Td>\n                            <Td>\n                                {record.total_ex_taxes.toLocaleString(\n                                    undefined,\n                                    { style: 'currency', currency: 'USD' }\n                                )}\n                            </Td>\n                        </Tr>\n                        <Tr>\n                            <Td colSpan={2} />\n                            <Td>\n                                {translate(\n                                    'resources.commands.fields.basket.delivery'\n                                )}\n                            </Td>\n                            <Td>\n                                {record.delivery_fees.toLocaleString(\n                                    undefined,\n                                    { style: 'currency', currency: 'USD' }\n                                )}\n                            </Td>\n                        </Tr>\n                        <Tr>\n                            <Td colSpan={2} />\n                            <Td>\n                                {translate(\n                                    'resources.commands.fields.basket.tax_rate'\n                                )}\n                            </Td>\n                            <Td>\n                                {record.tax_rate.toLocaleString(undefined, {\n                                    style: 'percent',\n                                })}\n                            </Td>\n                        </Tr>\n                        <Tr>\n                            <Td colSpan={2} />\n                            <Td>\n                                {translate(\n                                    'resources.commands.fields.basket.total'\n                                )}\n                            </Td>\n                            <Td>\n                                {record.total.toLocaleString(undefined, {\n                                    style: 'currency',\n                                    currency: 'USD',\n                                })}\n                            </Td>\n                        </Tr>\n                    </Tbody>\n                </Table>\n            </Paper>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    const {\n        record: { basket },\n    } = props;\n    const productIds = basket.map(item => item.product_id);\n    return {\n        products: productIds\n            .map(productId => state.admin.resources.products.data[productId])\n            .filter(r => typeof r !== 'undefined')\n            .reduce((prev, next) => {\n                prev[next.id] = next;\n                return prev;\n            }, {}),\n    };\n};\n\nconst enhance = compose(\n    translate,\n    connect(\n        mapStateToProps,\n        {\n            crudGetMany: crudGetManyAction,\n        }\n    )\n);\n\nexport default enhance(Basket);\n","import React from 'react';\nimport {\n    AutocompleteInput,\n    BooleanInput,\n    DateInput,\n    ReferenceInput,\n    SelectInput,\n    SimpleForm,\n    TitleForRecord,\n} from '@bootstrap-styled/ra-ui';\nimport { translate, EditController } from 'react-admin';\n\nimport Card from '@bootstrap-styled/v4/lib/Cards/Card';\n\nimport Basket from './Basket';\n\nconst CommandTitle = translate(({ record, translate }) => (\n    <span>\n        {translate('resources.commands.name', { smart_count: 1 })} #{\n            record.reference\n        }\n    </span>\n));\n\nconst CommandEdit = ({ ...props }) => (\n    <EditController title={<CommandTitle />} {...props}>\n        {controllerProps =>\n            controllerProps.record ? (\n                <div>\n                    <Card>\n                        <TitleForRecord\n                            defaultTitle={controllerProps.defaultTitle}\n                            record={controllerProps.record}\n                        />\n                        <SimpleForm {...controllerProps}>\n                            <DateInput source=\"date\" />\n                            <ReferenceInput\n                                source=\"customer_id\"\n                                reference=\"customers\"\n                            >\n                                <AutocompleteInput\n                                    optionText={choice =>\n                                        `${choice.first_name} ${\n                                            choice.last_name\n                                        }`\n                                    }\n                                />\n                            </ReferenceInput>\n                            <SelectInput\n                                source=\"status\"\n                                choices={[\n                                    { id: 'delivered', name: 'delivered' },\n                                    { id: 'ordered', name: 'ordered' },\n                                    { id: 'cancelled', name: 'cancelled' },\n                                    { id: 'unknown', name: 'unknown', disabled: true },\n                                ]}\n                            />\n                            <BooleanInput source=\"returned\" />\n                        </SimpleForm>\n                    </Card>\n                    <Basket record={controllerProps.record} />\n                </div>\n            ) : (\n                ''\n            )\n        }\n    </EditController>\n);\n\nexport default CommandEdit;\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport MuiGridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport withWidth from '@material-ui/core/withWidth';\nimport IconButton from '@material-ui/core/IconButton';\nimport ContentCreate from '@material-ui/icons/Create';\nimport { Link } from 'react-router-dom';\nimport { NumberField } from 'react-admin';\nimport { linkToRecord } from 'ra-core';\n\n// const styles = {\n//     root: {\n//         margin: '-2px',\n//     },\n//     gridList: {\n//         width: '100%',\n//         margin: 0,\n//     },\n//     tileBar: {\n//         background:\n//             'linear-gradient(to top, rgba(0,0,0,0.8) 0%,rgba(0,0,0,0.4) 70%,rgba(0,0,0,0) 100%)',\n//     },\n//     price: {\n//         display: 'inline',\n//         fontSize: '1em',\n//     },\n//     link: {\n//         color: '#fff',\n//     },\n// };\n\nconst getColsForWidth = width => {\n    if (width === 'xs') return 2;\n    if (width === 'sm') return 3;\n    if (width === 'md') return 4;\n    if (width === 'lg') return 5;\n    return 6;\n};\n\nconst GridList = ({ ids, data, basePath, width }) => (\n    <div>\n        <MuiGridList\n            cellHeight={180}\n            cols={getColsForWidth(width)}\n        >\n            {ids.map(id => (\n                <GridListTile key={id}>\n                    <img src={data[id].thumbnail} alt=\"\" />\n                    <GridListTileBar\n                        title={data[id].reference}\n                        subtitle={\n                            <span>\n                                {data[id].width}x{data[id].height},{' '}\n                                <NumberField\n                                    source=\"price\"\n                                    record={data[id]}\n                                    color=\"inherit\"\n                                    options={{\n                                        style: 'currency',\n                                        currency: 'USD',\n                                    }}\n                                />\n                            </span>\n                        }\n                        actionIcon={\n                            <IconButton\n                                to={linkToRecord(basePath, data[id].id)}\n                                component={Link}\n                            >\n                                <ContentCreate />\n                            </IconButton>\n                        }\n                    />\n                </GridListTile>\n            ))}\n        </MuiGridList>\n    </div>\n);\n\nconst enhance = compose(\n    withWidth(),\n);\n\nexport default enhance(GridList);\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\n// const styles = {\n//     root: { display: 'inline-block', marginTop: '1em', zIndex: 2 },\n//     content: { padding: 0, '&:last-child': { padding: 0 } },\n//     img: {\n//         width: 'initial',\n//         minWidth: 'initial',\n//         maxWidth: '42em',\n//         maxHeight: '15em',\n//     },\n// };\n\nconst Poster = ({ record }) => (\n    <Card>\n        <CardContent>\n            <img src={record.image} alt=\"\" />\n        </CardContent>\n    </Card>\n);\n\nexport default Poster;\n","import React from 'react';\nimport {\n    Create,\n    Datagrid,\n    DateField,\n    Edit,\n    EditButton,\n    Filter,\n    FormTab,\n    List,\n    NumberInput,\n    Pagination,\n    ReferenceInput,\n    ReferenceManyField,\n    SearchInput,\n    SelectInput,\n    TabbedForm,\n    TextField,\n    TextInput,\n    required,\n} from '@bootstrap-styled/ra-ui';\n\nimport { translate } from 'react-admin';\nimport Chip from '@material-ui/core/Chip';\nimport Icon from '@material-ui/icons/Collections';\nimport RichTextInput from 'ra-input-rich-text';\n\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport StarRatingField from '../reviews/StarRatingField';\nimport GridList from './GridList';\nimport Poster from './Poster';\n\nexport const ProductIcon = Icon;\n\nconst QuickFilter = translate(\n    ({ label, translate }) => (\n        <Chip label={translate(label)} />\n    )\n);\n\nexport const ProductFilter = props => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <ReferenceInput\n            source=\"category_id\"\n            reference=\"categories\"\n            sort={{ field: 'id', order: 'ASC' }}\n        >\n            <SelectInput source=\"name\" />\n        </ReferenceInput>\n        <NumberInput source=\"width_gte\" />\n        <NumberInput source=\"width_lte\" />\n        <NumberInput source=\"height_gte\" />\n        <NumberInput source=\"height_lte\" />\n        <QuickFilter\n            label=\"resources.products.fields.stock_lte\"\n            source=\"stock_lte\"\n            defaultValue={10}\n        />\n    </Filter>\n);\n\nexport const ProductList = props => (\n    <List\n        {...props}\n        filters={<ProductFilter />}\n        perPage={20}\n        sort={{ field: 'id', order: 'ASC' }}\n    >\n        <GridList />\n    </List>\n);\n\n// const createStyles = {\n//     stock: { width: '5em' },\n//     price: { width: '5em' },\n//     width: { width: '5em' },\n//     widthFormGroup: { display: 'inline-block' },\n//     height: { width: '5em' },\n//     heightFormGroup: { display: 'inline-block', marginLeft: 32 },\n// };\n\nexport const ProductCreate =\n    ({ ...props }) => (\n        <Create {...props}>\n            <TabbedForm>\n                <FormTab label=\"resources.products.tabs.image\">\n                    <TextInput\n                        autoFocus\n                        source=\"image\"\n                        options={{ fullWidth: true }}\n                        validate={required()}\n                    />\n                    <TextInput\n                        source=\"thumbnail\"\n                        options={{ fullWidth: true }}\n                        validate={required()}\n                    />\n                </FormTab>\n                <FormTab label=\"resources.products.tabs.details\" path=\"details\">\n                    <TextInput source=\"reference\" validate={required()} />\n                    <NumberInput\n                        source=\"price\"\n                        validate={required()}\n                    />\n                    <NumberInput\n                        source=\"width\"\n                        validate={required()}\n                    />\n                    <NumberInput\n                        source=\"height\"\n                        validate={required()}\n                    />\n                    <ReferenceInput\n                        source=\"category_id\"\n                        reference=\"categories\"\n                        allowEmpty\n                    >\n                        <SelectInput source=\"name\" />\n                    </ReferenceInput>\n                    <NumberInput\n                        source=\"stock\"\n                        validate={required()}\n                    />\n                </FormTab>\n                <FormTab\n                    label=\"resources.products.tabs.description\"\n                    path=\"description\"\n                >\n                    <RichTextInput source=\"description\" addLabel={false} />\n                </FormTab>\n            </TabbedForm>\n        </Create>\n);\n\nconst ProductTitle = ({ record }) => <span>Poster #{record.reference}</span>;\n\n// const editStyles = {\n//     ...createStyles,\n//     comment: {\n//         maxWidth: '20em',\n//         overflow: 'hidden',\n//         textOverflow: 'ellipsis',\n//         whiteSpace: 'nowrap',\n//     },\n// };\n\nexport const ProductEdit = ({ ...props }) => (\n    <Edit {...props} title={<ProductTitle />}>\n        <TabbedForm>\n            <FormTab label=\"resources.products.tabs.image\">\n                <Poster />\n                <TextInput source=\"image\" options={{ fullWidth: true }} />\n                <TextInput source=\"thumbnail\" options={{ fullWidth: true }} />\n            </FormTab>\n            <FormTab label=\"resources.products.tabs.details\" path=\"details\">\n                <TextInput source=\"reference\" />\n                <NumberInput source=\"price\" />\n                <NumberInput\n                    source=\"width\"\n                />\n                <NumberInput\n                    source=\"height\"\n                />\n                <ReferenceInput source=\"category_id\" reference=\"categories\">\n                    <SelectInput source=\"name\" />\n                </ReferenceInput>\n                <NumberInput source=\"stock\" />\n            </FormTab>\n            <FormTab\n                label=\"resources.products.tabs.description\"\n                path=\"description\"\n            >\n                <RichTextInput source=\"description\" addLabel={false} />\n            </FormTab>\n            <FormTab label=\"resources.products.tabs.reviews\" path=\"reviews\">\n                <ReferenceManyField\n                    reference=\"reviews\"\n                    target=\"product_id\"\n                    addLabel={false}\n                    pagination={<Pagination />}\n                >\n                    <Datagrid>\n                        <DateField source=\"date\" />\n                        <CustomerReferenceField />\n                        <StarRatingField />\n                        <TextField\n                            source=\"comment\"\n                        />\n                        <TextField source=\"status\" />\n                        <EditButton />\n                    </Datagrid>\n                </ReferenceManyField>\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n);\n","import React from 'react';\n\nconst styles = {\n  width: 25,\n  maxWidth: 25,\n  maxHeight: 25\n};\n\nconst ThumbnailField =({ record }) => (\n    <img src={record.thumbnail} style={styles} alt=\"\" />\n);\n\nexport default ThumbnailField;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ProductRefField = ({ record }) => (\n    <Link to={`products/${record.id}`}>{record.reference}</Link>\n);\n\nProductRefField.defaultProps = {\n    source: 'id',\n    label: 'Reference',\n};\n\nexport default ProductRefField;\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { translate } from 'react-admin';\nimport { stringify } from 'query-string';\n\nimport { ProductIcon } from '../products';\n\nconst LinkToRelatedProducts = ({ record, translate }) => (\n    <Button\n        size=\"small\"\n        color=\"primary\"\n        component={Link}\n        to={{\n            pathname: '/products',\n            search: stringify({\n                page: 1,\n                perPage: 25,\n                sort: 'id',\n                order: 'DESC',\n                filter: JSON.stringify({ category_id: record.id }),\n            }),\n        }}\n        className=\"d-inline-flex align-items-center\"\n    >\n        <ProductIcon className=\"pr-1\" />\n        {translate('resources.categories.fields.products')}\n    </Button>\n);\n\nconst enhance = compose(\n    translate\n);\nexport default enhance(LinkToRelatedProducts);\n","import React from 'react';\nimport {\n    Datagrid,\n    Edit,\n    EditButton,\n    NumberField,\n    ReferenceManyField,\n    SimpleForm,\n    TextField,\n    TextInput,\n} from '@bootstrap-styled/ra-ui';\n\nimport { List, translate } from 'react-admin';\n\nimport Icon from '@material-ui/icons/Bookmark';\n\nimport ThumbnailField from '../products/ThumbnailField';\nimport ProductRefField from '../products/ProductRefField';\nimport LinkToRelatedProducts from './LinkToRelatedProducts';\n\nexport const CategoryIcon = Icon;\n\nexport const CategoryList = (({ ...props }) => (\n    <List {...props} sort={{ field: 'name', order: 'ASC' }}>\n        <Datagrid>\n            <TextField source=\"name\" />\n            <LinkToRelatedProducts />\n            <EditButton />\n        </Datagrid>\n    </List>\n));\n\nconst CategoryTitle = translate(({ record, translate }) => (\n    <span>\n        {translate('resources.categories.name', { smart_count: 1 })} &quot;{\n            record.name\n        }&quot;\n    </span>\n));\n\nexport const CategoryEdit = props => (\n    <Edit title={<CategoryTitle />} {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" />\n            <ReferenceManyField\n                reference=\"products\"\n                target=\"category_id\"\n                label=\"resources.categories.fields.products\"\n                perPage={5}\n            >\n                <Datagrid>\n                    <ThumbnailField />\n                    <ProductRefField source=\"reference\" />\n                    <NumberField\n                        source=\"price\"\n                        options={{ style: 'currency', currency: 'USD' }}\n                    />\n                    <NumberField\n                        source=\"width\"\n                        options={{ minimumFractionDigits: 2 }}\n                    />\n                    <NumberField\n                        source=\"height\"\n                        options={{ minimumFractionDigits: 2 }}\n                    />\n                    <NumberField source=\"stock\" />\n                    <EditButton />\n                </Datagrid>\n            </ReferenceManyField>\n        </SimpleForm>\n    </Edit>\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport IconButton from '@material-ui/core/IconButton';\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport ThumbDown from '@material-ui/icons/ThumbDown';\n\nimport {\n    reviewApprove as reviewApproveAction,\n    reviewReject as reviewRejectAction,\n} from './reviewActions';\n\nclass ApproveButton extends Component {\n    handleApprove = () => {\n        const { reviewApprove, record } = this.props;\n        reviewApprove(record.id, record);\n    };\n\n    handleReject = () => {\n        const { reviewReject, record } = this.props;\n        reviewReject(record.id, record);\n    };\n\n    render() {\n        const { record } = this.props;\n        if (record.status !== 'pending') return null;\n        return (\n            <span>\n                <IconButton onClick={this.handleApprove}>\n                    <ThumbUp />\n                </IconButton>\n                <IconButton onClick={this.handleReject}>\n                    <ThumbDown />\n                </IconButton>\n            </span>\n        );\n    }\n}\n\nApproveButton.propTypes = {\n    record: PropTypes.object,\n    reviewApprove: PropTypes.func,\n    reviewReject: PropTypes.func,\n};\n\nexport default connect(\n    null,\n    {\n        reviewApprove: reviewApproveAction,\n        reviewReject: reviewRejectAction,\n    }\n)(ApproveButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport { translate } from 'react-admin';\nimport compose from 'recompose/compose';\nimport { reviewApprove as reviewApproveAction } from './reviewActions';\n\nclass AcceptButton extends Component {\n    handleApprove = () => {\n        const { reviewApprove, record } = this.props;\n        reviewApprove(record.id, record);\n    };\n\n    render() {\n        const { record, translate } = this.props;\n        return record && record.status === 'pending' ? (\n            <Button color=\"primary\" size=\"small\" onClick={this.handleApprove}>\n                <ThumbUp\n                    color=\"primary\"\n                    style={{ paddingRight: '0.5em', color: 'green' }}\n                />\n                {translate('resources.reviews.action.accept')}\n            </Button>\n        ) : (\n            <span />\n        );\n    }\n}\n\nAcceptButton.propTypes = {\n    record: PropTypes.object,\n    reviewApprove: PropTypes.func,\n    translate: PropTypes.func,\n};\n\nconst enhance = compose(\n    translate,\n    connect(\n        null,\n        {\n            reviewApprove: reviewApproveAction,\n        }\n    )\n);\n\nexport default enhance(AcceptButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport ThumbDown from '@material-ui/icons/ThumbDown';\nimport { translate } from 'react-admin';\nimport compose from 'recompose/compose';\nimport { reviewReject as reviewRejectAction } from './reviewActions';\n\nclass AcceptButton extends Component {\n    handleApprove = () => {\n        const { reviewReject, record } = this.props;\n        reviewReject(record.id, record);\n    };\n\n    render() {\n        const { record, translate } = this.props;\n        return record && record.status === 'pending' ? (\n            <Button color=\"primary\" size=\"small\" onClick={this.handleApprove}>\n                <ThumbDown\n                    color=\"primary\"\n                    style={{ paddingRight: '0.5em', color: 'red' }}\n                />\n                {translate('resources.reviews.action.reject')}\n            </Button>\n        ) : (\n            <span />\n        );\n    }\n}\n\nAcceptButton.propTypes = {\n    record: PropTypes.object,\n    reviewReject: PropTypes.func,\n    translate: PropTypes.func,\n};\n\nconst enhance = compose(\n    translate,\n    connect(\n        null,\n        {\n            reviewReject: reviewRejectAction,\n        }\n    )\n);\n\nexport default enhance(AcceptButton);\n","import React from 'react';\nimport { CardActions } from 'react-admin';\n\nimport AcceptButton from './AcceptButton';\nimport RejectButton from './RejectButton';\n\nconst ReviewEditActions = ({ data }) => (\n    <CardActions>\n        <AcceptButton record={data} />\n        <RejectButton record={data} />\n    </CardActions>\n);\n\nexport default ReviewEditActions;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { startUndoable, crudUpdateMany } from 'ra-core';\n\nclass BulkApproveAction extends Component {\n    componentDidMount = () => {\n        const { basePath, startUndoable, resource, selectedIds } = this.props;\n        startUndoable(\n            crudUpdateMany(\n                resource,\n                selectedIds,\n                { status: 'accepted' },\n                basePath\n            )\n        );\n        this.props.onExit();\n    };\n\n    render() {\n        return null;\n    }\n}\n\nBulkApproveAction.propTypes = {\n    basePath: PropTypes.string,\n    label: PropTypes.string,\n    onExit: PropTypes.func.isRequired,\n    resource: PropTypes.string.isRequired,\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n    startUndoable: PropTypes.func.isRequired,\n};\n\nexport default connect(\n    undefined,\n    { startUndoable }\n)(BulkApproveAction);\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { startUndoable, crudUpdateMany } from 'ra-core';\n\nclass BulkRejectAction extends Component {\n    componentDidMount = () => {\n        const { basePath, startUndoable, resource, selectedIds } = this.props;\n        startUndoable(\n            crudUpdateMany(\n                resource,\n                selectedIds,\n                { status: 'rejected' },\n                basePath\n            )\n        );\n        this.props.onExit();\n    };\n\n    render() {\n        return null;\n    }\n}\n\nBulkRejectAction.propTypes = {\n    basePath: PropTypes.string,\n    label: PropTypes.string,\n    onExit: PropTypes.func.isRequired,\n    resource: PropTypes.string.isRequired,\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n    startUndoable: PropTypes.func.isRequired,\n};\n\nexport default connect(\n    undefined,\n    { startUndoable }\n)(BulkRejectAction);\n","import green from '@material-ui/core/colors/green';\nimport orange from '@material-ui/core/colors/orange';\nimport red from '@material-ui/core/colors/red';\n\nconst rowStyle = (record, index, defaultStyle = {}) => {\n    if (record.status === 'accepted')\n        return {\n            ...defaultStyle,\n            borderLeftColor: green[500],\n            borderLeftWidth: 5,\n            borderLeftStyle: 'solid',\n        };\n    if (record.status === 'pending')\n        return {\n            ...defaultStyle,\n            borderLeftColor: orange[500],\n            borderLeftWidth: 5,\n            borderLeftStyle: 'solid',\n        };\n    if (record.status === 'rejected')\n        return {\n            ...defaultStyle,\n            borderLeftColor: red[500],\n            borderLeftWidth: 5,\n            borderLeftStyle: 'solid',\n        };\n    return defaultStyle;\n};\n\nexport default rowStyle;\n","// in src/comments.js\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { DateField, EditButton, translate } from 'react-admin';\n\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport StarRatingField from './StarRatingField';\nimport ProductReferenceField from '../products/ProductReferenceField';\nimport ApproveButton from './ApproveButton';\nimport rowStyle from './rowStyle';\n\nconst cardStyle = {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '0.5rem 0',\n};\n\n// const listStyles = theme => ({\n//     card: {\n//         height: '100%',\n//         display: 'flex',\n//         flexDirection: 'column',\n//         margin: '0.5rem 0',\n//     },\n//     cardTitleContent: {\n//         display: 'flex',\n//         flexDirection: 'rows',\n//         alignItems: 'center',\n//         justifyContent: 'space-between',\n//     },\n//     cardContent: theme.typography.body1,\n//     cardContentRow: {\n//         display: 'flex',\n//         flexDirection: 'rows',\n//         alignItems: 'center',\n//         margin: '0.5rem 0',\n//     },\n// });\n\nconst MobileGrid = (\n    translate(({ ids, data, basePath, translate }) => (\n        <div style={{ margin: '1em' }}>\n            {ids.map(id => (\n                <Card key={id} style={rowStyle(data[id], cardStyle)}>\n                    <CardHeader\n                        title={\n                            <div>\n                                <span>\n                                    {translate('resources.reviews.fields.date')}:&nbsp;\n                                    <DateField\n                                        record={data[id]}\n                                        source=\"date\"\n                                    />\n                                </span>\n\n                                <EditButton\n                                    resource=\"reviews\"\n                                    basePath={basePath}\n                                    record={data[id]}\n                                />\n                            </div>\n                        }\n                    />\n                    <CardContent>\n                        <span>\n                            {translate('resources.reviews.fields.rating', 1)}:&nbsp;\n                            <StarRatingField record={data[id]} />\n                        </span>\n                        <span>\n                            {translate('resources.customers.name', 1)}:&nbsp;\n                            <CustomerReferenceField\n                                record={data[id]}\n                                basePath={basePath}\n                            />\n                        </span>\n                        <span>\n                            {translate('resources.reviews.fields.product_id')}:&nbsp;\n                            <ProductReferenceField\n                                record={data[id]}\n                                basePath={basePath}\n                            />\n                        </span>\n                        {data[id].status === 'pending' && (\n                            <span>\n                                {translate('resources.reviews.fields.comment')}:<br />\n                                {data[id].comment}\n                            </span>\n                        )}\n                        {data[id].status === 'pending' && (\n                            <span>\n                                <ApproveButton record={data[id]} />\n                            </span>\n                        )}\n                    </CardContent>\n                </Card>\n            ))}\n        </div>\n    ))\n);\n\nMobileGrid.defaultProps = {\n    data: {},\n    ids: [],\n};\n\nexport default MobileGrid;\n","import React from 'react';\nimport {\n    AutocompleteInput,\n    BulkActions,\n    BulkDeleteAction,\n    Datagrid,\n    DateField,\n    DateInput,\n    Edit,\n    EditButton,\n    Filter,\n    List,\n    LongTextInput,\n    ReferenceField,\n    ReferenceInput,\n    Responsive,\n    SearchInput,\n    SelectInput,\n    SimpleForm,\n    TextField,\n} from 'react-admin';\nimport Icon from '@material-ui/icons/Comment';\n\nimport ProductReferenceField from '../products/ProductReferenceField';\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport StarRatingField from './StarRatingField';\nimport ApproveButton from './ApproveButton';\nimport ReviewEditActions from './ReviewEditActions';\nimport BulkApproveAction from './BulkApproveAction';\nimport BulkRejectAction from './BulkRejectAction';\nimport rowStyle from './rowStyle';\nimport MobileGrid from './MobileGrid';\n\nexport const ReviewIcon = Icon;\n\nexport const ReviewFilter = (\n    ({ ...props }) => (\n        <Filter {...props}>\n            <SearchInput source=\"q\" alwaysOn />\n            <SelectInput\n                source=\"status\"\n                choices={[\n                    { id: 'accepted', name: 'Accepted' },\n                    { id: 'pending', name: 'Pending' },\n                    { id: 'rejected', name: 'Rejected' },\n                ]}\n            />\n            <ReferenceInput source=\"customer_id\" reference=\"customers\">\n                <AutocompleteInput\n                    optionText={choice =>\n                        `${choice.first_name} ${choice.last_name}`\n                    }\n                />\n            </ReferenceInput>\n            <ReferenceInput source=\"product_id\" reference=\"products\">\n                <AutocompleteInput optionText=\"reference\" />\n            </ReferenceInput>\n            <DateInput source=\"date_gte\" />\n            <DateInput source=\"date_lte\" />\n        </Filter>\n    )\n);\n//\n// const listStyles = {\n//     headerRow: {\n//         borderLeftColor: 'white',\n//         borderLeftWidth: 5,\n//         borderLeftStyle: 'solid',\n//     },\n//     comment: {\n//         maxWidth: '18em',\n//         overflow: 'hidden',\n//         textOverflow: 'ellipsis',\n//         whiteSpace: 'nowrap',\n//     },\n// };\n\nconst ReviewsBulkActions = props => (\n    <BulkActions {...props}>\n        <BulkApproveAction label=\"resources.reviews.action.accept\" />\n        <BulkRejectAction label=\"resources.reviews.action.reject\" />\n        <BulkDeleteAction />\n    </BulkActions>\n);\n\nexport const ReviewList = ({ ...props }) => (\n    <List\n        {...props}\n        bulkActions={<ReviewsBulkActions />}\n        filters={<ReviewFilter />}\n        perPage={25}\n        sort={{ field: 'date', order: 'DESC' }}\n    >\n        <Responsive\n            xsmall={<MobileGrid />}\n            medium={\n                <Datagrid\n                    rowStyle={rowStyle}\n                >\n                    <DateField source=\"date\" />\n                    <CustomerReferenceField />\n                    <ProductReferenceField />\n                    <StarRatingField />\n                    <TextField\n                        source=\"comment\"\n                    />\n                    <TextField source=\"status\" />\n                    <ApproveButton />\n                    <EditButton />\n                </Datagrid>\n            }\n        />\n    </List>\n);\n\n// const editStyle = {\n//     detail: {\n//         display: 'inline-block',\n//         verticalAlign: 'top',\n//         marginRight: '2em',\n//         minWidth: '8em',\n//     },\n// };\nexport const ReviewEdit = ({ ...props }) => (\n    <Edit {...props} actions={<ReviewEditActions />}>\n        <SimpleForm>\n            <DateField source=\"date\" />\n            <CustomerReferenceField />\n            <ProductReferenceField />\n            <ReferenceField\n                source=\"command_id\"\n                reference=\"commands\"\n                addLabel\n            >\n                <TextField source=\"reference\" />\n            </ReferenceField>\n            <StarRatingField />\n            <LongTextInput source=\"comment\" />\n            <SelectInput\n                source=\"status\"\n                choices={[\n                    { id: 'accepted', name: 'Accepted' },\n                    { id: 'pending', name: 'Pending' },\n                    { id: 'rejected', name: 'Rejected' },\n                ]}\n            />\n        </SimpleForm>\n    </Edit>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport LabelIcon from '@material-ui/icons/Label';\nimport {\n    translate,\n    DashboardMenuItem,\n    MenuItemLink,\n    Responsive,\n} from 'react-admin';\nimport { withRouter } from 'react-router-dom';\n\nimport { VisitorIcon } from './visitors';\nimport { CommandIcon } from './commands';\nimport { ProductIcon } from './products';\nimport { CategoryIcon } from './categories';\nimport { ReviewIcon } from './reviews';\n\nconst items = [\n    { name: 'customers', icon: <VisitorIcon /> },\n    { name: 'segments', icon: <LabelIcon /> },\n    { name: 'commands', icon: <CommandIcon /> },\n    { name: 'products', icon: <ProductIcon /> },\n    { name: 'categories', icon: <CategoryIcon /> },\n    { name: 'reviews', icon: <ReviewIcon /> },\n];\n\nconst Menu = ({ onMenuClick, translate, logout }) => (\n    <div>\n        <DashboardMenuItem onClick={onMenuClick} />\n        {items.map(item => (\n            <MenuItemLink\n                key={item.name}\n                to={`/${item.name}`}\n                primaryText={translate(`resources.${item.name}.name`, {\n                    smart_count: 2,\n                })}\n                leftIcon={item.icon}\n                onClick={onMenuClick}\n            />\n        ))}\n        <Responsive\n            xsmall={\n                <MenuItemLink\n                    to=\"/configuration\"\n                    primaryText={translate('pos.configuration')}\n                    leftIcon={<SettingsIcon />}\n                    onClick={onMenuClick}\n                />\n            }\n            medium={null}\n        />\n        <Responsive xsmall={logout} medium={null} />\n    </div>\n);\n\nconst enhance = compose(\n    withRouter,\n    connect(\n        state => ({\n            theme: state.theme,\n            locale: state.i18n.locale,\n        }),\n        {}\n    ),\n    translate\n);\n\nexport default enhance(Menu);\n","import React from 'react';\nimport { Card, CardBlock, H2, P, Button, CardImg } from '@bootstrap-styled/v4';\n\nimport CardActions from '@material-ui/core/CardActions';\nimport HomeIcon from '@material-ui/icons/Home';\nimport CodeIcon from '@material-ui/icons/Code';\n\nimport { translate } from 'react-admin';\n\nconst mediaUrl = `https://marmelab.com/posters/beard-${parseInt(\n    Math.random() * 10,\n    10\n) + 1}.jpeg`;\n\nconst Welcome = ({ translate }) => (\n    <Card>\n        <CardImg src={mediaUrl} style={{ height: '18em', display: 'block', backgroundSize: 'cover', backgroundRepeat: 'no-repeat', backgroundPosition: 'center' }} />\n        <CardBlock>\n            <H2>\n                {translate('pos.dashboard.welcome.title')}\n            </H2>\n            <P>\n                {translate('pos.dashboard.welcome.subtitle')}\n            </P>\n        </CardBlock>\n        <CardActions style={{ justifyContent: 'flex-end' }}>\n            <Button href=\"https://marmelab.com/react-admin\" className=\"d-inline-flex align-items-center\" color=\"secondary\">\n                <HomeIcon className=\"pr-1\" />\n                {translate('pos.dashboard.welcome.aor_button')}\n            </Button>\n            <Button href=\"https://github.com/marmelab/react-admin/tree/master/examples/demo\" className=\"d-inline-flex align-items-center\" color=\"secondary\">\n                <CodeIcon className=\"pr-1\" />\n                {translate('pos.dashboard.welcome.demo_button')}\n            </Button>\n        </CardActions>\n    </Card>\n);\n\nexport default translate(Welcome);\n","import React from 'react';\nimport { Card } from '@bootstrap-styled/v4';\n\nconst styles = {\n    card: {\n        float: 'left',\n        margin: '-20px 20px 0 15px',\n        zIndex: 100,\n        borderRadius: 3,\n        display: 'block',\n    },\n    icon: {\n        float: 'right',\n        width: 54,\n        height: 54,\n        padding: 14,\n        color: '#fff',\n    },\n};\n\nconst CardIcon = ({ Icon, bgColor }) => (\n    <Card style={{ backgroundColor: bgColor, float: 'left', margin: '-20px 20px 0 15px', zIndex: '100', borderRadius: 3, display: 'block' }}>\n        <Icon style={styles.icon}/>\n    </Card>\n);\n\nexport default CardIcon;\n","import React from 'react';\nimport { Card, H3, P } from '@bootstrap-styled/v4';\n\nimport DollarIcon from '@material-ui/icons/AttachMoney';\nimport { translate } from 'react-admin';\n\nimport CardIcon from './CardIcon';\n\nconst styles = {\n    main: {\n        flex: '1',\n        marginRight: '1em',\n        marginTop: 20,\n    },\n    card: {\n        overflow: 'inherit',\n        textAlign: 'right',\n        padding: 16,\n        minHeight: 52,\n        display: 'block',\n    },\n};\n\nconst MonthlyRevenue = ({ value, translate }) => (\n    <div style={styles.main}>\n        <CardIcon Icon={DollarIcon} bgColor=\"#31708f\" />\n        <Card style={styles.card}>\n            <P>{translate('pos.dashboard.monthly_revenue')}</P>\n            <H3>{value}</H3>\n        </Card>\n    </div>\n);\n\nexport default translate(MonthlyRevenue);\n","import React from 'react';\nimport { Card, H3, P } from '@bootstrap-styled/v4';\n\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport { translate } from 'react-admin';\n\nimport CardIcon from './CardIcon';\n\nconst styles = {\n  main: {\n    flex: '1',\n    marginRight: '1em',\n    marginTop: 20,\n  },\n  card: {\n    overflow: 'inherit',\n    textAlign: 'right',\n    padding: 16,\n    minHeight: 52,\n    display: 'block',\n  },\n};\n\nconst NbNewOrders = ({ value, translate }) => (\n  <div style={styles.main}>\n    <CardIcon Icon={ShoppingCartIcon} bgColor=\"#FF9800\" />\n    <Card style={styles.card}>\n      <P>{translate('pos.dashboard.monthly_revenue')}</P>\n      <H3>{value}</H3>\n    </Card>\n  </div>\n);\n\nexport default translate(NbNewOrders);\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Link } from 'react-router-dom';\nimport { translate } from 'react-admin';\n\n// const style = theme => ({\n//     root: {\n//         flex: 1,\n//     },\n//     avatar: {\n//         background: theme.palette.background.avatar,\n//     },\n//     cost: {\n//         marginRight: '1em',\n//         color: theme.palette.text.primary,\n//     },\n// });\n\nconst PendingOrders = ({ orders = [], customers = {}, translate }) => (\n    <Card>\n        <CardHeader title={translate('pos.dashboard.pending_orders')} />\n        <List dense={true}>\n            {orders.map(record => (\n                <ListItem\n                    key={record.id}\n                    button\n                    component={Link}\n                    to={`/commands/${record.id}`}\n                >\n                    {customers[record.customer_id] ? (\n                        <Avatar\n                            src={`${\n                                customers[record.customer_id].avatar\n                            }?size=32x32`}\n                        />\n                    ) : (\n                        <Avatar />\n                    )}\n                    <ListItemText\n                        primary={new Date(record.date).toLocaleString('en-GB')}\n                        secondary={translate('pos.dashboard.order.items', {\n                            smart_count: record.basket.length,\n                            nb_items: record.basket.length,\n                            customer_name: customers[record.customer_id]\n                                ? `${\n                                      customers[record.customer_id].first_name\n                                  } ${customers[record.customer_id].last_name}`\n                                : '',\n                        })}\n                    />\n                    <ListItemSecondaryAction>\n                        <span>{record.total}$</span>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            ))}\n        </List>\n    </Card>\n);\n\nconst enhance = compose(\n    translate\n);\n\nexport default enhance(PendingOrders);\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Avatar from '@material-ui/core/Avatar';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport Divider from '@material-ui/core/Divider';\nimport { Link } from 'react-router-dom';\nimport { translate } from 'react-admin';\nimport { Card, H3, P, ListGroup, ListGroupItem, ListGroupItemText } from '@bootstrap-styled/v4';\nimport styled from 'styled-components';\nimport CardIcon from './CardIcon';\n\nimport StarRatingField from '../reviews/StarRatingField';\n\nconst styles = theme => ({\n    main: {\n        flex: '1',\n        marginRight: '1em',\n        marginTop: 20,\n    },\n    titleLink: { textDecoration: 'none', color: 'inherit' },\n    card: {\n        padding: '16px 0',\n        overflow: 'inherit',\n        textAlign: 'right',\n        display: 'block',\n        minHeight: 52,\n    },\n    title: {\n        padding: '0 16px',\n    },\n    value: {\n        padding: '0 16px',\n        minHeight: 48,\n    },\n    avatar: {\n        background: theme.palette.background.avatar,\n    },\n})\n\nconst ListItemTextWrapper = styled.div`\n      overflow-y: hidden;\n      height: 4em;\n      display: -webkit-box;\n      Webkit-line-clamp: 2;\n      Webkit-box-orient: vertical;\n      margin-left: 16px;\n`;\n\nconst location = {\n    pathname: 'reviews',\n    query: { filter: JSON.stringify({ status: 'pending' }) },\n};\n\nconst PendingReviews = ({\n    reviews = [],\n    customers = {},\n    nb,\n    translate,\n}) => (\n    <div style={styles.main}>\n        <CardIcon Icon={CommentIcon} bgColor=\"#f44336\" />\n        <Card style={styles.card}>\n            <P>{translate('pos.dashboard.pending_reviews')}</P>\n            <H3><Link to={location}>{nb}</Link></H3>\n            <Divider />\n            <ListGroup>\n                {reviews.map(record => (\n                    <ListGroupItem\n                        key={record.id}\n                        tag={Link}\n                        to={`/reviews/${record.id}`}\n                        style={{ textDecoration: 'none', fontSize: '13px', flexFlow: 'unset' }}\n                    >\n                        {customers[record.customer_id] ? (\n                            <Avatar\n                                src={`${\n                                    customers[record.customer_id].avatar\n                                }?size=32x32`}\n                            />\n                        ) : (\n                            <Avatar />\n                        )}\n                        <ListItemTextWrapper>\n                          <ListGroupItemText className=\"d-flex flex-column\">\n                            <StarRatingField record={record} />\n                            {record.comment}\n                          </ListGroupItemText>\n                        </ListItemTextWrapper>\n                    </ListGroupItem>\n                ))}\n            </ListGroup>\n        </Card>\n    </div>\n);\n\nconst enhance = compose(\n    translate\n);\n\nexport default enhance(PendingReviews);\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport CustomerIcon from '@material-ui/icons/PersonAdd';\nimport Divider from '@material-ui/core/Divider';\nimport { Link } from 'react-router-dom';\nimport { translate } from 'react-admin';\n\nimport CardIcon from './CardIcon';\n\n// const styles = theme => ({\n//     main: {\n//         flex: '1',\n//         marginLeft: '1em',\n//         marginTop: 20,\n//     },\n//     card: {\n//         padding: '16px 0',\n//         overflow: 'inherit',\n//         textAlign: 'right',\n//     },\n//     title: {\n//         padding: '0 16px',\n//     },\n//     value: {\n//         padding: '0 16px',\n//         minHeight: 48,\n//     },\n//     avatar: {\n//         background: theme.palette.background.avatar,\n//     },\n//     listItemText: {\n//         paddingRight: 0,\n//     },\n// });\n\nconst NewCustomers = ({ visitors = [], nb, translate }) => (\n    <div>\n        <CardIcon Icon={CustomerIcon} bgColor=\"#4caf50\" />\n        <Card>\n            <p>\n                {translate('pos.dashboard.new_customers')}\n            </p>\n            <h2>\n                {nb}\n            </h2>\n            <Divider />\n            <List>\n                {visitors.map(record => (\n                    <ListItem\n                        button\n                        to={`/customers/${record.id}`}\n                        component={Link}\n                        key={record.id}\n                    >\n                        <Avatar\n                            src={`${record.avatar}?size=32x32`}\n                        />\n                        <ListItemText\n                            primary={`${record.first_name} ${record.last_name}`}\n                        />\n                    </ListItem>\n                ))}\n            </List>\n        </Card>\n    </div>\n);\n\nconst enhance = compose(\n    translate\n);\n\nexport default enhance(NewCustomers);\n","export default type => {\n    switch (type) {\n        case 'rest':\n            return import('./rest').then(provider => provider.default);\n        case 'graphql':\n            return import('./graphql').then(factory => factory.default());\n        default:\n            throw new Error(`Unknow dataProvider type ${type}`);\n    }\n};\n","import React, { Component, Fragment } from 'react';\nimport { GET_LIST, GET_MANY, Responsive, Title } from 'react-admin';\n\nimport Welcome from './Welcome';\nimport MonthlyRevenue from './MonthlyRevenue';\nimport NbNewOrders from './NbNewOrders';\nimport PendingOrders from './PendingOrders';\nimport PendingReviews from './PendingReviews';\nimport NewCustomers from './NewCustomers';\nimport dataProviderFactory from '../dataProvider';\n\nconst styles = {\n    flex: { display: 'flex' },\n    flexColumn: { display: 'flex', flexDirection: 'column' },\n    leftCol: { flex: 1, marginRight: '1em' },\n    rightCol: { flex: 1, marginLeft: '1em' },\n    singleCol: { marginTop: '2em', marginBottom: '2em' },\n};\n\nclass Dashboard extends Component {\n    state = {};\n\n    componentDidMount() {\n        const aMonthAgo = new Date();\n        aMonthAgo.setDate(aMonthAgo.getDate() - 30);\n\n        dataProviderFactory(process.env.REACT_APP_DATA_PROVIDER).then(\n            dataProvider => {\n                dataProvider(GET_LIST, 'commands', {\n                    filter: { date_gte: aMonthAgo.toISOString() },\n                    sort: { field: 'date', order: 'DESC' },\n                    pagination: { page: 1, perPage: 50 },\n                })\n                    .then(response =>\n                        response.data\n                            .filter(order => order.status !== 'cancelled')\n                            .reduce(\n                                (stats, order) => {\n                                    if (order.status !== 'cancelled') {\n                                        stats.revenue += order.total;\n                                        stats.nbNewOrders++;\n                                    }\n                                    if (order.status === 'ordered') {\n                                        stats.pendingOrders.push(order);\n                                    }\n                                    return stats;\n                                },\n                                {\n                                    revenue: 0,\n                                    nbNewOrders: 0,\n                                    pendingOrders: [],\n                                }\n                            )\n                    )\n                    .then(({ revenue, nbNewOrders, pendingOrders }) => {\n                        this.setState({\n                            revenue: revenue.toLocaleString(undefined, {\n                                style: 'currency',\n                                currency: 'USD',\n                                minimumFractionDigits: 0,\n                                maximumFractionDigits: 0,\n                            }),\n                            nbNewOrders,\n                            pendingOrders,\n                        });\n                        return pendingOrders;\n                    })\n                    .then(pendingOrders =>\n                        pendingOrders.map(order => order.customer_id)\n                    )\n                    .then(customerIds =>\n                        dataProvider(GET_MANY, 'customers', {\n                            ids: customerIds,\n                        })\n                    )\n                    .then(response => response.data)\n                    .then(customers =>\n                        customers.reduce((prev, customer) => {\n                            prev[customer.id] = customer; // eslint-disable-line no-param-reassign\n                            return prev;\n                        }, {})\n                    )\n                    .then(customers =>\n                        this.setState({ pendingOrdersCustomers: customers })\n                    );\n\n                dataProvider(GET_LIST, 'reviews', {\n                    filter: { status: 'pending' },\n                    sort: { field: 'date', order: 'DESC' },\n                    pagination: { page: 1, perPage: 100 },\n                })\n                    .then(response => response.data)\n                    .then(reviews => {\n                        const nbPendingReviews = reviews.reduce(nb => ++nb, 0);\n                        const pendingReviews = reviews.slice(\n                            0,\n                            Math.min(10, reviews.length)\n                        );\n                        this.setState({ pendingReviews, nbPendingReviews });\n                        return pendingReviews;\n                    })\n                    .then(reviews => reviews.map(review => review.customer_id))\n                    .then(customerIds =>\n                        dataProvider(GET_MANY, 'customers', {\n                            ids: customerIds,\n                        })\n                    )\n                    .then(response => response.data)\n                    .then(customers =>\n                        customers.reduce((prev, customer) => {\n                            prev[customer.id] = customer; // eslint-disable-line no-param-reassign\n                            return prev;\n                        }, {})\n                    )\n                    .then(customers =>\n                        this.setState({ pendingReviewsCustomers: customers })\n                    );\n\n                dataProvider(GET_LIST, 'customers', {\n                    filter: {\n                        has_ordered: true,\n                        first_seen_gte: aMonthAgo.toISOString(),\n                    },\n                    sort: { field: 'first_seen', order: 'DESC' },\n                    pagination: { page: 1, perPage: 100 },\n                })\n                    .then(response => response.data)\n                    .then(newCustomers => {\n                        this.setState({ newCustomers });\n                        this.setState({\n                            nbNewCustomers: newCustomers.reduce(nb => ++nb, 0),\n                        });\n                    });\n            }\n        );\n    }\n\n    render() {\n        const {\n            nbNewCustomers,\n            nbNewOrders,\n            nbPendingReviews,\n            newCustomers,\n            pendingOrders,\n            pendingOrdersCustomers,\n            pendingReviews,\n            pendingReviewsCustomers,\n            revenue,\n        } = this.state;\n        return (\n            <Fragment>\n                <Title title=\"Posters Galore Admin\" />\n                <Responsive\n                    xsmall={\n                        <div>\n                            <div style={styles.flexColumn}>\n                                <div style={{ marginBottom: '2em' }}>\n                                    <Welcome />\n                                </div>\n                                <div style={styles.flex}>\n                                    <MonthlyRevenue value={revenue} />\n                                    <NbNewOrders value={nbNewOrders} />\n                                </div>\n                                <div style={styles.singleCol}>\n                                    <PendingOrders\n                                        orders={pendingOrders}\n                                        customers={pendingOrdersCustomers}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    }\n                    small={\n                        <div style={styles.flexColumn}>\n                            <div style={styles.singleCol}>\n                                <Welcome />\n                            </div>\n                            <div style={styles.flex}>\n                                <MonthlyRevenue value={revenue} />\n                                <NbNewOrders value={nbNewOrders} />\n                            </div>\n                            <div style={styles.singleCol}>\n                                <PendingOrders\n                                    orders={pendingOrders}\n                                    customers={pendingOrdersCustomers}\n                                />\n                            </div>\n                        </div>\n                    }\n                    medium={\n                        <div style={styles.flex}>\n                            <div style={styles.leftCol}>\n                                <div style={styles.flex}>\n                                    <MonthlyRevenue value={revenue} />\n                                    <NbNewOrders value={nbNewOrders} />\n                                </div>\n                                <div style={styles.singleCol}>\n                                    <Welcome />\n                                </div>\n                                <div style={styles.singleCol}>\n                                    <PendingOrders\n                                        orders={pendingOrders}\n                                        customers={pendingOrdersCustomers}\n                                    />\n                                </div>\n                            </div>\n                            <div style={styles.rightCol}>\n                                <div style={styles.flex}>\n                                    <PendingReviews\n                                        nb={nbPendingReviews}\n                                        reviews={pendingReviews}\n                                        customers={pendingReviewsCustomers}\n                                    />\n                                    <NewCustomers\n                                        nb={nbNewCustomers}\n                                        visitors={newCustomers}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    }\n                />\n            </Fragment>\n        );\n    }\n}\n\nexport default Dashboard;\n","import DashboardComponent from './Dashboard';\n\nexport const Dashboard = DashboardComponent;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { translate, changeLocale, Title } from 'react-admin';\nimport compose from 'recompose/compose';\nimport { changeTheme } from './actions';\n\n// const styles = {\n//     label: { width: '10em', display: 'inline-block' },\n//     button: { margin: '1em' },\n// };\n\nconst Configuration = ({\n    theme,\n    locale,\n    changeTheme,\n    changeLocale,\n    translate,\n}) => (\n    <Card>\n        <Title title={translate('pos.configuration')} />\n        <CardContent>\n            <div>{translate('pos.theme.name')}</div>\n            <Button\n                variant=\"raised\"\n                color={theme === 'light' ? 'primary' : 'default'}\n                onClick={() => changeTheme('light')}\n            >\n                {translate('pos.theme.light')}\n            </Button>\n            <Button\n                variant=\"raised\"\n                color={theme === 'dark' ? 'primary' : 'default'}\n                onClick={() => changeTheme('dark')}\n            >\n                {translate('pos.theme.dark')}\n            </Button>\n        </CardContent>\n        <CardContent>\n            <div>{translate('pos.language')}</div>\n            <Button\n                variant=\"raised\"\n                color={locale === 'en' ? 'primary' : 'default'}\n                onClick={() => changeLocale('en')}\n            >\n                en\n            </Button>\n            <Button\n                variant=\"raised\"\n                color={locale === 'fr' ? 'primary' : 'default'}\n                onClick={() => changeLocale('fr')}\n            >\n                fr\n            </Button>\n        </CardContent>\n    </Card>\n);\n\nconst mapStateToProps = state => ({\n    theme: state.theme,\n    locale: state.i18n.locale,\n});\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            changeLocale,\n            changeTheme,\n        }\n    ),\n    translate,\n)(Configuration);\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Button from '@bootstrap-styled/v4/lib/Button';\nimport { Link } from 'react-router-dom';\nimport { translate } from 'react-admin';\nimport { stringify } from 'query-string';\n\nimport { VisitorIcon } from '../visitors';\n\nconst LinkToRelatedCustomers = ({ segment, translate }) => (\n    <Button\n        size=\"sm\"\n        color=\"primary\"\n        className=\" d-inline-flex align-items-center\"\n        tag={Link}\n        to={{\n            pathname: '/customers',\n            search: stringify({\n                page: 1,\n                perPage: 25,\n                filter: JSON.stringify({ groups: segment }),\n            }),\n        }}\n    >\n        <VisitorIcon className=\"pr-1\" />\n        {translate('resources.segments.fields.customers')}\n    </Button>\n);\n\nconst enhance = compose(\n    translate\n);\nexport default enhance(LinkToRelatedCustomers);\n","import React from 'react';\nimport { translate } from 'react-admin';\nimport { Title } from '@bootstrap-styled/ra-ui';\nimport Card from '@bootstrap-styled/v4/lib/Cards/Card';\nimport Table from '@bootstrap-styled/v4/lib/Table';\nimport Tbody from '@bootstrap-styled/v4/lib/Table/Tbody';\nimport Td from '@bootstrap-styled/v4/lib/Table/Td';\nimport Th from '@bootstrap-styled/v4/lib/Table/Th';\nimport Thead from '@bootstrap-styled/v4/lib/Table/Thead';\nimport Tr from '@bootstrap-styled/v4/lib/Table/Tr';\n\n\nimport LinkToRelatedCustomers from './LinkToRelatedCustomers';\nimport segments from './data';\n\nexport default translate(({ translate }) => (\n    <Card>\n        <Title title={translate('resources.segments.name')} />\n        <Table className=\"mb-0\">\n            <Thead>\n                <Tr>\n                    <Th style={{border: 'none'}}>\n                        {translate('resources.segments.fields.name')}\n                    </Th>\n                    <Th style={{border: 'none'}} />\n                </Tr>\n            </Thead>\n            <Tbody>\n                {segments.map(segment => (\n                    <Tr key={segment.id}>\n                        <Td>{translate(segment.name)}</Td>\n                        <Td>\n                            <LinkToRelatedCustomers segment={segment.id} />\n                        </Td>\n                    </Tr>\n                ))}\n            </Tbody>\n        </Table>\n    </Card>\n));\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Configuration from './configuration/Configuration';\nimport Segments from './segments/Segments';\n\nexport default [\n    <Route exact path=\"/configuration\" component={Configuration} />,\n    <Route exact path=\"/segments\" component={Segments} />,\n];\n","import englishMessages from 'ra-language-english';\n\nexport default {\n    ...englishMessages,\n    pos: {\n        search: 'Search',\n        configuration: 'Configuration',\n        language: 'Language',\n        theme: {\n            name: 'Theme',\n            light: 'Light',\n            dark: 'Dark',\n        },\n        dashboard: {\n            monthly_revenue: 'Monthly Revenue',\n            new_orders: 'New Orders',\n            pending_reviews: 'Pending Reviews',\n            new_customers: 'New Customers',\n            pending_orders: 'Pending Orders',\n            order: {\n                items:\n                    'by %{customer_name}, one item |||| by %{customer_name}, %{nb_items} items',\n            },\n            welcome: {\n                title: 'Welcome to react-admin demo',\n                subtitle:\n                    \"This is the admin of an imaginary poster shop. Fell free to explore and modify the data - it's local to your computer, and will reset each time you reload.\",\n                aor_button: 'react-admin site',\n                demo_button: 'Source for this demo',\n            },\n        },\n    },\n    resources: {\n        customers: {\n            name: 'Customer |||| Customers',\n            fields: {\n                commands: 'Orders',\n                groups: 'Segments',\n                last_seen_gte: 'Visited Since',\n                name: 'Name',\n                total_spent: 'Total spent',\n            },\n            tabs: {\n                identity: 'Identity',\n                address: 'Address',\n                orders: 'Orders',\n                reviews: 'Reviews',\n                stats: 'Stats',\n            },\n            page: {\n                delete: 'Delete Customer',\n            },\n        },\n        commands: {\n            name: 'Order |||| Orders',\n            fields: {\n                basket: {\n                    delivery: 'Delivery',\n                    reference: 'Reference',\n                    quantity: 'Quantity',\n                    sum: 'Sum',\n                    tax_rate: 'Tax Rate',\n                    total: 'Total',\n                    unit_price: 'Unit Price',\n                },\n                customer_id: 'Customer',\n                date_gte: 'Passed Since',\n                date_lte: 'Passed Before',\n                total_gte: 'Min amount',\n                status: 'Status',\n                returned: 'Returned',\n            },\n        },\n        products: {\n            name: 'Poster |||| Posters',\n            fields: {\n                category_id: 'Category',\n                height_gte: 'Min height',\n                height_lte: 'Max height',\n                height: 'Height',\n                image: 'Image',\n                price: 'Price',\n                reference: 'Reference',\n                stock_lte: 'Low Stock',\n                stock: 'Stock',\n                thumbnail: 'Thumbnail',\n                width_gte: 'Min width',\n                width_lte: 'Max width',\n                width: 'Width',\n            },\n            tabs: {\n                image: 'Image',\n                details: 'Details',\n                description: 'Description',\n                reviews: 'Reviews',\n            },\n        },\n        categories: {\n            name: 'Category |||| Categories',\n            fields: {\n                products: 'Products',\n            },\n        },\n        reviews: {\n            name: 'Review |||| Reviews',\n            fields: {\n                customer_id: 'Customer',\n                command_id: 'Order',\n                product_id: 'Product',\n                date_gte: 'Posted since',\n                date_lte: 'Posted before',\n                date: 'Date',\n                comment: 'Comment',\n                rating: 'Rating',\n            },\n            action: {\n                accept: 'Accept',\n                reject: 'Reject',\n            },\n            notification: {\n                approved_success: 'Review approved',\n                approved_error: 'Error: Review not approved',\n                rejected_success: 'Review rejected',\n                rejected_error: 'Error: Review not rejected',\n            },\n        },\n        segments: {\n            name: 'Segments',\n            fields: {\n                customers: 'Customers',\n                name: 'Name',\n            },\n            data: {\n                compulsive: 'Compulsive',\n                collector: 'Collector',\n                ordered_once: 'Ordered once',\n                regular: 'Regular',\n                returns: 'Returns',\n                reviewer: 'Reviewer',\n            },\n        },\n    },\n};\n","export default type => {\n    switch (type) {\n        case 'rest':\n            return import('./rest').then(factory => factory.default());\n\n        case 'graphql':\n            return import('./graphql').then(factory => factory.default());\n\n        default:\n            throw new Error(`Unknow dataProvider type ${type}`);\n    }\n};\n","import React, { Component } from 'react';\nimport { Admin, Resource } from 'react-admin';\n\nimport './App.css';\n\nimport authProvider from './authProvider';\nimport sagas from './sagas';\nimport themeReducer from './themeReducer';\nimport Login from './Login';\nimport Layout from './Layout';\nimport Menu from './Menu';\nimport { Dashboard } from './dashboard';\nimport customRoutes from './routes';\nimport englishMessages from './i18n/en';\n\nimport {\n    VisitorList,\n    VisitorEdit,\n    VisitorCreate,\n    VisitorIcon,\n} from './visitors';\nimport { CommandList, CommandEdit, CommandIcon } from './commands';\nimport {\n    ProductList,\n    ProductCreate,\n    ProductEdit,\n    ProductIcon,\n} from './products';\nimport { CategoryList, CategoryEdit, CategoryIcon } from './categories';\nimport { ReviewList, ReviewEdit, ReviewIcon } from './reviews';\n\nimport dataProviderFactory from './dataProvider';\nimport fakeServerFactory from './fakeServer';\n\nconst i18nProvider = locale => {\n    if (locale === 'fr') {\n        return import('./i18n/fr').then(messages => messages.default);\n    }\n\n    // Always fallback on english\n    return englishMessages;\n};\n\nclass App extends Component {\n    state = { dataProvider: null };\n\n    async componentWillMount() {\n        this.restoreFetch = await fakeServerFactory(\n            process.env.REACT_APP_DATA_PROVIDER\n        );\n\n        const dataProvider = await dataProviderFactory(\n            process.env.REACT_APP_DATA_PROVIDER\n        );\n\n        this.setState({ dataProvider });\n    }\n\n    componentWillUnmount() {\n        this.restoreFetch();\n    }\n\n    render() {\n        const { dataProvider } = this.state;\n\n        if (!dataProvider) {\n            return (\n                <div className=\"loader-container\">\n                    <div className=\"loader\">Loading...</div>\n                </div>\n            );\n        }\n\n        return (\n            <Admin\n                title=\"Posters Galore Admin\"\n                dataProvider={dataProvider}\n                customReducers={{ theme: themeReducer }}\n                customSagas={sagas}\n                customRoutes={customRoutes}\n                authProvider={authProvider}\n                dashboard={Dashboard}\n                loginPage={Login}\n                appLayout={Layout}\n                menu={Menu}\n                locale=\"en\"\n                i18nProvider={i18nProvider}\n            >\n                <Resource\n                    name=\"customers\"\n                    list={VisitorList}\n                    edit={VisitorEdit}\n                    create={VisitorCreate}\n                    icon={VisitorIcon}\n                />\n                <Resource\n                    name=\"commands\"\n                    list={CommandList}\n                    edit={CommandEdit}\n                    icon={CommandIcon}\n                    options={{ label: 'Orders' }}\n                />\n                <Resource\n                    name=\"products\"\n                    list={ProductList}\n                    create={ProductCreate}\n                    edit={ProductEdit}\n                    icon={ProductIcon}\n                />\n                <Resource\n                    name=\"categories\"\n                    list={CategoryList}\n                    edit={CategoryEdit}\n                    icon={CategoryIcon}\n                />\n                <Resource\n                    name=\"reviews\"\n                    list={ReviewList}\n                    edit={ReviewEdit}\n                    icon={ReviewIcon}\n                />\n            </Admin>\n        );\n    }\n}\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport BootstrapProvider from '@bootstrap-styled/provider/lib/BootstrapProvider';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<BootstrapProvider injectGlobal={true} reset={true}><App /></BootstrapProvider>, document.getElementById('root'));\n"],"sourceRoot":""}